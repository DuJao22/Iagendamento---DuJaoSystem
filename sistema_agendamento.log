2025-09-03 19:01:53,652 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-03 19:01:53,652 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-03 19:01:53,653 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:01:54,449 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:01:54,451 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:01:54,451 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 19:02:04,238 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 19:02:04,238 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:06,593 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:06,595 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:10,608 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-03 19:02:10,608 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:14,177 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:14,179 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:14,223 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:15,100 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:15,102 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:15,143 - root - INFO - [ai_service.py:451] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-03 19:02:16,875 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-03 19:02:16,875 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:18,986 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:18,987 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:19,030 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:23,084 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:23,086 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:23,086 - root - INFO - [ai_service.py:654] - IA identificou especialidade 'NeuroPediatra' para mensagem: 'NeuroPediatra'
2025-09-03 19:02:29,855 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-03 19:02:29,856 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:31,422 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:31,424 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:32,330 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:32,914 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:32,916 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:39,258 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-03 19:02:39,258 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:40,673 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:40,674 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:44,916 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ok
2025-09-03 19:02:44,916 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:46,915 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:46,917 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:46,918 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:02:50,913 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:02:50,915 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:02:50,915 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ok'
2025-09-03 19:03:00,991 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 19:03:00,991 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:03,102 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:03,104 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:07,632 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-03 19:03:07,632 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:09,709 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:09,710 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:09,752 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:10,629 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:10,630 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:10,651 - root - INFO - [ai_service.py:451] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-03 19:03:12,387 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-03 19:03:12,387 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:17,786 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:17,788 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:17,831 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:19,344 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:19,345 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:19,345 - root - INFO - [ai_service.py:654] - IA identificou especialidade 'NeuroPediatra' para mensagem: 'NeuroPediatra'
2025-09-03 19:03:25,053 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-03 19:03:25,053 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:26,826 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:26,828 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:27,774 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:28,201 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:28,203 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:03:30,983 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-03 19:03:30,983 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:03:33,244 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:03:33,246 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:06:06,162 - app - ERROR - [app.py:875] - Exception on /api/status [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column pacientes.carteirinha does not exist
LINE 2: ...tes_telefone, pacientes.email AS pacientes_email, pacientes....
                                                             ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 686, in api_status
    total_pacientes = Paciente.query.count()
                      ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 3146, in count
    self._legacy_from_self(col).enable_eagerloads(False).scalar()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2835, in scalar
    ret = self.one()
          ^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2808, in one
    return self._iter().one()  # type: ignore
           ^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2857, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
    return meth(
           ^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column pacientes.carteirinha does not exist
LINE 2: ...tes_telefone, pacientes.email AS pacientes_email, pacientes....
                                                             ^

[SQL: SELECT count(*) AS count_1 
FROM (SELECT pacientes.id AS pacientes_id, pacientes.cpf AS pacientes_cpf, pacientes.nome AS pacientes_nome, pacientes.telefone AS pacientes_telefone, pacientes.email AS pacientes_email, pacientes.carteirinha AS pacientes_carteirinha, pacientes.tipo_atendimento AS pacientes_tipo_atendimento, pacientes.criado_em AS pacientes_criado_em 
FROM pacientes) AS anon_1]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-09-03 19:06:20,344 - app - ERROR - [app.py:875] - Exception on /api/status [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column pacientes.carteirinha does not exist
LINE 2: ...tes_telefone, pacientes.email AS pacientes_email, pacientes....
                                                             ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 686, in api_status
    total_pacientes = Paciente.query.count()
                      ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 3146, in count
    self._legacy_from_self(col).enable_eagerloads(False).scalar()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2835, in scalar
    ret = self.one()
          ^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2808, in one
    return self._iter().one()  # type: ignore
           ^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/query.py", line 2857, in _iter
    result: Union[ScalarResult[_T], Result[_T]] = self.session.execute(
                                                  ^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2365, in execute
    return self._execute_internal(
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/session.py", line 2251, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/orm/context.py", line 306, in orm_execute_statement
    result = conn.execute(
             ^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1419, in execute
    return meth(
           ^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/sql/elements.py", line 526, in _execute_on_connection
    return connection._execute_clauseelement(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1641, in _execute_clauseelement
    ret = self._execute_context(
          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1846, in _execute_context
    return self._exec_single_context(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 951, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column pacientes.carteirinha does not exist
LINE 2: ...tes_telefone, pacientes.email AS pacientes_email, pacientes....
                                                             ^

[SQL: SELECT count(*) AS count_1 
FROM (SELECT pacientes.id AS pacientes_id, pacientes.cpf AS pacientes_cpf, pacientes.nome AS pacientes_nome, pacientes.telefone AS pacientes_telefone, pacientes.email AS pacientes_email, pacientes.carteirinha AS pacientes_carteirinha, pacientes.tipo_atendimento AS pacientes_tipo_atendimento, pacientes.criado_em AS pacientes_criado_em 
FROM pacientes) AS anon_1]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-09-03 19:09:50,235 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-03 19:09:50,235 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-03 19:09:50,235 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:09:54,657 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:09:54,659 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:09:54,659 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 19:10:03,106 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: ola
2025-09-03 19:10:03,106 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-03 19:10:03,106 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:10:04,089 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:10:04,090 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:10:04,090 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 19:10:13,705 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 19:10:13,706 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:10:15,510 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:10:15,511 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:18:15,421 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: Ola
2025-09-03 19:18:15,421 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-03 19:18:15,421 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:18:16,504 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:18:16,506 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:18:16,506 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Ola'
2025-09-03 19:18:29,507 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 1234567891011
2025-09-03 19:18:29,507 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:18:31,686 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:18:31,691 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:18:39,851 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-03 19:18:39,852 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:18:42,129 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:18:42,131 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:18:59,618 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-03 19:18:59,618 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:02,303 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:02,304 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:02,349 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:04,303 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:04,305 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:04,341 - root - INFO - [ai_service.py:521] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-03 19:19:08,733 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-03 19:19:08,734 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:11,514 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:11,516 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:11,562 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:12,643 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:12,645 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:12,645 - root - INFO - [ai_service.py:724] - IA identificou especialidade 'NeuroPediatra' para mensagem: 'NeuroPediatra'
2025-09-03 19:19:22,879 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-03 19:19:22,879 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:24,982 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:24,984 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:25,982 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:26,605 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:26,606 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:19:32,027 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: Sim
2025-09-03 19:19:32,027 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:19:33,170 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:19:33,171 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:20:15,891 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Sair
2025-09-03 19:20:15,891 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:20:18,597 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:20:18,598 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:20:18,599 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:20:20,394 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:20:20,396 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:20:20,396 - root - INFO - [ai_service.py:203] - IA detectou tipo 'fora_escopo' para mensagem: 'Sair'
2025-09-03 19:21:04,596 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Obrigado
2025-09-03 19:21:04,596 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:06,462 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:06,464 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:06,464 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:08,739 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:08,740 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:08,740 - root - INFO - [ai_service.py:203] - IA detectou tipo 'fora_escopo' para mensagem: 'Obrigado'
2025-09-03 19:21:22,030 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-03 19:21:22,031 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:25,515 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:25,516 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:34,848 - root - INFO - [ai_service.py:39] - Estado atual: cancelamento, Mensagem: 111.753.436-76
2025-09-03 19:21:34,850 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:37,508 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:37,510 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:48,006 - root - INFO - [ai_service.py:39] - Estado atual: cancelamento, Mensagem: 1
2025-09-03 19:21:48,007 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:49,395 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:49,396 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:49,485 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:50,124 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:50,125 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:21:56,078 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-03 19:21:56,078 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:21:58,345 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:21:58,347 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 19:22:05,698 - root - INFO - [ai_service.py:39] - Estado atual: consulta_agendamentos, Mensagem: 111.753.436-76
2025-09-03 19:22:05,698 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 19:22:08,531 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 19:22:08,533 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:01:14,287 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Oi
2025-09-03 20:01:14,287 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'local' para 'inicio'
2025-09-03 20:01:14,288 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:01:16,757 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:01:16,758 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:01:16,758 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-03 20:01:48,208 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 20:01:48,208 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:01:50,382 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:01:50,384 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:14:35,942 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: ola
2025-09-03 20:14:35,945 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-03 20:14:35,945 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:14:37,770 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:14:37,771 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:14:37,771 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 20:14:51,924 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 20:14:51,924 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:14:54,405 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:14:54,407 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:15:14,716 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: joao layon
2025-09-03 20:15:14,716 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:15:19,289 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:15:19,290 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:15:31,721 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-03 20:15:31,721 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:15:34,341 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:15:34,342 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:15:41,646 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22012001
2025-09-03 20:15:41,646 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:15:44,171 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:15:44,172 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:16:04,543 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 2021/01/22
2025-09-03 20:16:04,543 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:16:06,964 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:16:06,965 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:19:25,342 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: ola
2025-09-03 20:19:25,342 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-03 20:19:25,342 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:19:26,558 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:19:26,559 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:19:26,559 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 20:19:36,147 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 20:19:36,148 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:19:38,015 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:19:38,017 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:19:44,601 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: joao layon
2025-09-03 20:19:44,602 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:19:48,056 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:19:48,058 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:21:00,720 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-03 20:21:00,720 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 20:21:02,937 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 20:21:02,938 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 20:21:02,939 - root - INFO - [ai_service.py:1219] - Validando data: '22/01/2001'
2025-09-03 20:21:02,939 - root - INFO - [ai_service.py:1223] - Data limpa: '22/01/2001'
2025-09-03 20:21:02,941 - root - INFO - [ai_service.py:1232] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-03 20:21:02,941 - root - INFO - [ai_service.py:1246] - Data válida aceita: 2001-01-22
2025-09-03 23:10:19,569 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: ola
2025-09-03 23:10:19,570 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-03 23:10:19,571 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:10:20,735 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:10:20,736 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:10:20,736 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-03 23:10:30,661 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 23:10:30,661 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:10:33,217 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:10:33,218 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:10:40,587 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: JOAO LAYON
2025-09-03 23:10:40,588 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:10:47,939 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:10:47,940 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:10:47,940 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-03 23:10:47,941 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:10:50,686 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:10:50,688 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:10:50,688 - root - INFO - [ai_service.py:203] - IA detectou tipo 'fora_escopo' para mensagem: 'JOAO LAYON'
2025-09-03 23:11:06,336 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: Oi
2025-09-03 23:11:06,336 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-03 23:11:06,336 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:11:07,227 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:11:07,229 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:11:07,230 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-03 23:11:15,040 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-03 23:11:15,040 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:11:16,300 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:11:16,302 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:11:20,645 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: joao layon
2025-09-03 23:11:20,646 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:11:22,490 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:11:22,492 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:11:39,011 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-03 23:11:39,012 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:11:41,351 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:11:41,352 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:11:41,353 - root - INFO - [ai_service.py:1221] - Validando data: '22/01/2001'
2025-09-03 23:11:41,353 - root - INFO - [ai_service.py:1225] - Data limpa: '22/01/2001'
2025-09-03 23:11:41,355 - root - INFO - [ai_service.py:1234] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-03 23:11:41,355 - root - INFO - [ai_service.py:1248] - Data válida aceita: 2001-01-22
2025-09-03 23:11:41,355 - root - INFO - [ai_service.py:321] - Data armazenada nos dados: 2001-01-22
2025-09-03 23:11:55,822 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 31971280512
2025-09-03 23:11:55,822 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:11:58,111 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:11:58,113 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:12:08,519 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: pular
2025-09-03 23:12:08,519 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:12:11,903 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:12:11,905 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:12:24,664 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 716261623123
2025-09-03 23:12:24,665 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:12:27,394 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:12:27,395 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:12:40,218 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-03 23:12:40,218 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:12:42,562 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 503 Service Unavailable"
2025-09-03 23:12:42,851 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-03 23:12:43,814 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-03 23:12:43,815 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-03 23:12:43,967 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 00:25:15,746 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: ola
2025-09-04 00:25:15,748 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 00:25:15,748 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:25:17,367 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:25:17,368 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:25:17,369 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 00:25:27,963 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 00:25:27,963 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:25:30,646 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:25:30,647 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:25:38,198 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: joao layon antunes
2025-09-04 00:25:38,198 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:25:40,485 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:25:40,486 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:25:48,044 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 00:25:48,044 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:25:52,127 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:25:52,128 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:25:52,128 - root - INFO - [ai_service.py:1221] - Validando data: '22/01/2001'
2025-09-04 00:25:52,128 - root - INFO - [ai_service.py:1225] - Data limpa: '22/01/2001'
2025-09-04 00:25:52,130 - root - INFO - [ai_service.py:1234] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-04 00:25:52,130 - root - INFO - [ai_service.py:1248] - Data válida aceita: 2001-01-22
2025-09-04 00:25:52,130 - root - INFO - [ai_service.py:321] - Data armazenada nos dados: 2001-01-22
2025-09-04 00:25:58,970 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 31971280512
2025-09-04 00:25:58,970 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:26:00,652 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:26:00,654 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:26:12,022 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: joaolayon07@gmail.com
2025-09-04 00:26:12,022 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:26:14,633 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:26:14,634 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:12,967 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 09090909
2025-09-04 00:29:12,969 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:15,430 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:15,431 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:22,758 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 00:29:22,758 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:26,917 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:26,918 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:27,202 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:28,289 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:28,290 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:28,447 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 00:29:39,703 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 00:29:39,703 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:41,118 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:41,130 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:41,415 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:41,980 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:41,981 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:41,981 - root - INFO - [ai_service.py:726] - IA identificou especialidade 'Cardiologia' para mensagem: 'Cardiologia'
2025-09-04 00:29:47,546 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 5
2025-09-04 00:29:47,546 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:49,768 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:49,770 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:29:52,758 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:29:53,616 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:29:53,617 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:30:00,166 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 00:30:00,166 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:30:02,192 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:30:02,193 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:30:20,210 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 00:30:20,210 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:30:23,227 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:30:23,228 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:30:30,641 - root - INFO - [ai_service.py:39] - Estado atual: consulta_agendamentos, Mensagem: 11175343676
2025-09-04 00:30:30,641 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:30:32,574 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:30:32,575 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:30:46,299 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: cancelar
2025-09-04 00:30:46,300 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:30:48,498 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:30:48,500 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:30:57,194 - root - INFO - [ai_service.py:39] - Estado atual: cancelamento, Mensagem: 11175343676
2025-09-04 00:30:57,194 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:30:59,748 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:30:59,749 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:31:03,836 - root - INFO - [ai_service.py:39] - Estado atual: cancelamento, Mensagem: 1
2025-09-04 00:31:03,836 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:31:05,997 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:31:05,999 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 00:31:06,568 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 00:31:07,413 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 00:31:07,414 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:19:10,757 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: Ola
2025-09-04 01:19:10,760 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 01:19:10,760 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:11,258 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 503 Service Unavailable"
2025-09-04 01:19:11,259 - root - WARNING - [ai_service.py:210] - IA temporariamente indisponível: 503 UNAVAILABLE. {'error': {'code': 503, 'message': 'The model is overloaded. Please try again later.', 'status': 'UNAVAILABLE'}}. Usando fallback inteligente.
2025-09-04 01:19:16,127 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 01:19:16,127 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:18,208 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:19:18,209 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:19:24,009 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: Joao layon
2025-09-04 01:19:24,010 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:26,036 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:19:26,038 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:19:38,829 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 01:19:38,829 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:41,610 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:19:41,611 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:19:41,612 - root - INFO - [ai_service.py:1305] - Validando data: '22/01/2001'
2025-09-04 01:19:41,612 - root - INFO - [ai_service.py:1309] - Data limpa: '22/01/2001'
2025-09-04 01:19:41,614 - root - INFO - [ai_service.py:1318] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-04 01:19:41,614 - root - INFO - [ai_service.py:1332] - Data válida aceita: 2001-01-22
2025-09-04 01:19:41,614 - root - INFO - [ai_service.py:321] - Data armazenada nos dados: 2001-01-22
2025-09-04 01:19:48,300 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 31 99528-1707
2025-09-04 01:19:48,300 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:51,046 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:19:51,047 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:19:55,880 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: Pular
2025-09-04 01:19:55,881 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:19:57,574 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:19:57,575 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:09,690 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 918838292839
2025-09-04 01:20:09,691 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:20:11,897 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:20:11,899 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:19,749 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 01:20:19,749 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:20:22,458 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:20:22,460 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:22,682 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:20:23,983 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:20:23,984 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:24,098 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 01:20:29,460 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Contagem
2025-09-04 01:20:29,460 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:20:31,747 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:20:31,749 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:31,971 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:20:34,310 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:20:34,311 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:20:34,311 - root - INFO - [ai_service.py:738] - IA identificou especialidade 'não encontrado' para mensagem: 'Contagem'
2025-09-04 01:24:59,836 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Ola
2025-09-04 01:24:59,836 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 01:24:59,836 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:00,641 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:00,643 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:00,643 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Ola'
2025-09-04 01:25:05,692 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 01:25:05,693 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:07,737 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:07,738 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:12,033 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 01:25:12,033 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:14,024 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:14,026 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:14,249 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:15,326 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:15,328 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:15,440 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 01:25:23,325 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 01:25:23,326 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:26,301 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:26,303 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:26,526 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:27,317 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:27,318 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:27,318 - root - INFO - [ai_service.py:738] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 01:25:39,419 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 01:25:39,419 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:41,036 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:41,038 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:45,956 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:46,575 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:46,577 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:25:51,139 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: Sim
2025-09-04 01:25:51,139 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:25:53,721 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:25:53,723 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:26:02,176 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 01:26:02,177 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:26:04,518 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:26:04,519 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:26:12,743 - root - INFO - [ai_service.py:39] - Estado atual: consulta_agendamentos, Mensagem: 111.753.436-76
2025-09-04 01:26:12,743 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:26:14,982 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:26:14,983 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:27:32,436 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: 148.768.236-76
2025-09-04 01:27:32,436 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:27:34,500 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:27:34,502 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:27:34,502 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:27:36,671 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:27:36,672 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:27:36,672 - root - INFO - [ai_service.py:203] - IA detectou tipo 'fora_escopo' para mensagem: '148.768.236-76'
2025-09-04 01:27:44,495 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Ola
2025-09-04 01:27:44,495 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 01:27:44,495 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:27:45,200 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:27:45,201 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:27:45,201 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Ola'
2025-09-04 01:27:47,381 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 01:27:47,382 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 01:27:47,382 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:27:47,973 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:27:47,974 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:27:47,974 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 01:28:07,637 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 14175864829
2025-09-04 01:28:07,637 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:28:10,324 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:28:10,325 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:28:21,705 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: Janaina
2025-09-04 01:28:21,705 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:28:27,812 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:28:27,813 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:28:43,026 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 08/09/1998
2025-09-04 01:28:43,026 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:28:46,653 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:28:46,655 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:28:46,655 - root - INFO - [ai_service.py:1305] - Validando data: '08/09/1998'
2025-09-04 01:28:46,655 - root - INFO - [ai_service.py:1309] - Data limpa: '08/09/1998'
2025-09-04 01:28:46,655 - root - INFO - [ai_service.py:1318] - Data parseada com formato %d/%m/%Y: 1998-09-08
2025-09-04 01:28:46,655 - root - INFO - [ai_service.py:1332] - Data válida aceita: 1998-09-08
2025-09-04 01:28:46,656 - root - INFO - [ai_service.py:321] - Data armazenada nos dados: 1998-09-08
2025-09-04 01:28:53,197 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: 31976317444
2025-09-04 01:28:53,197 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:28:55,517 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:28:55,518 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:17,187 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: Janahrodrigues777@gmail.com
2025-09-04 01:29:17,187 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:19,103 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:19,105 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:27,952 - root - INFO - [ai_service.py:39] - Estado atual: cadastro, Mensagem: Particular
2025-09-04 01:29:27,952 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:30,809 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:30,813 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:35,732 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 01:29:35,733 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:39,304 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:39,305 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:39,527 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:40,792 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:40,794 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:40,906 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 01:29:45,424 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 01:29:45,425 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:49,321 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:49,322 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:49,545 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:29:50,310 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:29:50,311 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:29:50,312 - root - INFO - [ai_service.py:738] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 01:30:03,046 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 01:30:03,046 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:30:04,949 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:30:04,950 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:30:09,840 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:30:10,437 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:30:10,440 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:30:14,245 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: Sim
2025-09-04 01:30:14,245 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:30:15,373 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:30:15,375 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:49:46,375 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: ola
2025-09-04 01:49:46,375 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 01:49:46,375 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:49:47,476 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:49:47,478 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:49:47,478 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 01:49:54,257 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 01:49:54,257 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:49:55,783 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:49:55,785 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:50:00,260 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 01:50:00,261 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:50:02,385 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:50:02,387 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:50:02,611 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:50:03,912 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:50:03,913 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:50:04,029 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 01:50:06,490 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 01:50:06,490 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:50:19,965 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:50:19,966 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:50:20,192 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:50:21,114 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:50:21,115 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:50:21,115 - root - INFO - [ai_service.py:738] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 01:53:43,499 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: ola
2025-09-04 01:53:43,499 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 01:53:43,499 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:53:44,350 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:53:44,352 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:53:44,352 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 01:53:51,147 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 01:53:51,147 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:53:52,310 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:53:52,311 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:53:55,108 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 01:53:55,109 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:53:57,965 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:53:57,967 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:53:58,189 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:00,348 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:00,349 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:54:00,466 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 01:54:05,289 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 01:54:05,289 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:08,625 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:08,626 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:54:08,848 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:10,566 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:10,567 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:54:10,567 - root - INFO - [ai_service.py:747] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 01:54:21,736 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 01:54:21,736 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:23,210 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:23,211 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:54:28,090 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:28,702 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:28,703 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 01:54:41,502 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 01:54:41,502 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 01:54:43,166 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 01:54:43,167 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:03:54,287 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-04 02:03:54,290 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 02:03:54,290 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:03:55,537 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:03:55,539 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:03:55,540 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:04:10,263 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:04:10,263 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:04:12,572 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:04:12,573 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:04:52,952 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:04:52,952 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:04:55,000 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:04:55,002 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:04:55,227 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:04:56,008 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:04:56,010 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:04:56,134 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:05:08,530 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:05:08,530 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:05:11,648 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:05:11,649 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:05:11,874 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:05:12,818 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:05:12,819 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:05:12,819 - root - INFO - [ai_service.py:747] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:05:27,923 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:05:27,923 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:05:30,164 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:05:30,166 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:05:35,107 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:05:35,796 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:05:35,798 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:05:44,103 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 02:05:44,103 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:05:45,971 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:05:45,972 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:15:48,400 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-04 02:15:48,400 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 02:15:48,401 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:15:50,001 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:15:50,003 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:15:50,004 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:15:55,767 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:15:55,768 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:15:58,523 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:15:58,528 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:01,760 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:16:01,761 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:04,647 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:04,649 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:04,877 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:06,043 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:06,047 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:06,169 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:16:09,088 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:16:09,089 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:16,553 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:16,554 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:16,780 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:17,533 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:17,534 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:17,534 - root - INFO - [ai_service.py:747] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:16:26,061 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:16:26,061 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:28,107 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:28,109 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:16:33,099 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:16:33,582 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:16:33,584 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:18:23,828 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 02:18:23,828 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:18:25,964 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:18:25,965 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:33,090 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-04 02:20:33,090 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 02:20:33,090 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:34,217 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:34,219 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:34,220 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:20:42,186 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:20:42,187 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:44,554 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:44,556 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:47,920 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:20:47,921 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:50,695 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:50,697 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:50,921 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:51,879 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:51,883 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:52,009 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:20:53,983 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:20:53,987 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:57,271 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:57,272 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:57,496 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:20:58,357 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:20:58,360 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:20:58,360 - root - INFO - [ai_service.py:747] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:21:06,913 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:21:06,915 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:21:08,883 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:21:08,887 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:21:12,924 - root - ERROR - [ai_service.py:74] - Erro ao processar mensagem: 'dia_semana'
2025-09-04 02:23:11,335 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: olar
2025-09-04 02:23:11,335 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:12,971 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:12,974 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:12,974 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 02:23:12,974 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:14,158 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:14,159 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:14,160 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'olar'
2025-09-04 02:23:21,772 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:23:21,773 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:23,876 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:23,878 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:28,259 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:23:28,260 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:31,692 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:31,693 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:31,915 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:33,296 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:33,297 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:33,411 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:23:36,379 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:23:36,380 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:39,154 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:39,156 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:39,379 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:40,211 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:40,213 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:40,213 - root - INFO - [ai_service.py:747] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:23:48,134 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:23:48,134 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:23:49,989 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:23:49,992 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:23:54,001 - root - ERROR - [ai_service.py:74] - Erro ao processar mensagem: 'dia_semana'
2025-09-04 02:25:25,930 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: ola
2025-09-04 02:25:25,931 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 02:25:25,931 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:28,255 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:28,256 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:28,257 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:25:34,574 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:25:34,574 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:36,334 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:36,336 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:39,523 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:25:39,523 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:41,442 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:41,443 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:41,665 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:43,350 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:43,352 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:43,466 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:25:46,406 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:25:46,406 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:49,008 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:49,010 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:49,233 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:49,987 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:49,989 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:25:49,989 - root - INFO - [ai_service.py:748] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:25:56,857 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:25:56,858 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:25:58,055 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:25:58,057 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:02,065 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:02,581 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:02,583 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:07,244 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 02:26:07,244 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:09,662 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:09,663 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:27,425 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: ola
2025-09-04 02:26:27,426 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 02:26:27,426 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:28,551 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:28,553 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:28,553 - root - INFO - [ai_service.py:203] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:26:36,031 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:26:36,031 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:37,897 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:37,898 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:40,463 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:26:40,465 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:42,262 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:42,265 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:42,489 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:46,314 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:46,315 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:46,427 - root - INFO - [ai_service.py:523] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:26:48,386 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 02:26:48,386 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:51,075 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:51,076 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:51,299 - google_genai.models - INFO - [models.py:6513] - AFC is enabled with max remote calls: 10.
2025-09-04 02:26:52,106 - httpx - INFO - [_client.py:1025] - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
2025-09-04 02:26:52,108 - google_genai.models - INFO - [models.py:6524] - AFC remote call 1 is done.
2025-09-04 02:26:52,108 - root - INFO - [ai_service.py:748] - IA identificou especialidade 'Neuro Pediatra' para mensagem: 'Neuro Pediatra'
2025-09-04 02:34:44,140 - root - INFO - [ai_service.py:38] - Estado atual: inicio, Mensagem: ola
2025-09-04 02:34:44,146 - root - INFO - [ai_service.py:43] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 02:34:44,146 - root - WARNING - [ai_service.py:209] - IA temporariamente indisponível: module 'google.generativeai' has no attribute 'generate_content'. Usando fallback inteligente.
2025-09-04 02:34:51,595 - root - INFO - [ai_service.py:38] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:34:56,316 - root - INFO - [ai_service.py:38] - Estado atual: cadastro, Mensagem: joao layon
2025-09-04 02:35:02,133 - root - INFO - [ai_service.py:38] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 02:35:02,133 - root - INFO - [ai_service.py:1379] - Validando data: '22/01/2001'
2025-09-04 02:35:02,133 - root - INFO - [ai_service.py:1383] - Data limpa: '22/01/2001'
2025-09-04 02:35:02,138 - root - INFO - [ai_service.py:1392] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-04 02:35:02,138 - root - INFO - [ai_service.py:1406] - Data válida aceita: 2001-01-22
2025-09-04 02:35:02,138 - root - INFO - [ai_service.py:320] - Data armazenada nos dados: 2001-01-22
2025-09-04 02:35:08,278 - root - INFO - [ai_service.py:38] - Estado atual: cadastro, Mensagem: 31971280512
2025-09-04 02:35:12,473 - root - INFO - [ai_service.py:38] - Estado atual: cadastro, Mensagem: pular
2025-09-04 02:35:18,036 - root - INFO - [ai_service.py:38] - Estado atual: cadastro, Mensagem: particular
2025-09-04 02:35:21,815 - root - INFO - [ai_service.py:38] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:35:22,037 - root - WARNING - [ai_service.py:533] - IA temporariamente indisponível para seleção de local: module 'google.generativeai' has no attribute 'generate_content'. Usando fallback.
2025-09-04 02:35:22,037 - root - ERROR - [ai_service.py:73] - Erro ao processar mensagem: name 'locais_disponiveis' is not defined
2025-09-04 02:38:09,675 - root - INFO - [ai_service.py:39] - Estado atual: inicio, Mensagem: ola
2025-09-04 02:38:09,675 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 02:38:11,143 - root - INFO - [ai_service.py:202] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:38:19,124 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:38:22,759 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:38:24,885 - root - INFO - [ai_service.py:522] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:38:29,274 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 02:38:29,975 - root - INFO - [ai_service.py:765] - IA identificou especialidade 'Cardiologia' para mensagem: 'Cardiologia'
2025-09-04 02:38:39,429 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 1
2025-09-04 02:38:57,060 - root - INFO - [ai_service.py:39] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 02:39:07,305 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 02:39:16,786 - root - INFO - [ai_service.py:39] - Estado atual: consulta_agendamentos, Mensagem: 11175343676
2025-09-04 02:39:23,791 - root - INFO - [ai_service.py:39] - Estado atual: finalizado, Mensagem: agendar
2025-09-04 02:39:24,259 - root - INFO - [ai_service.py:202] - IA detectou tipo 'agendamento' para mensagem: 'agendar'
2025-09-04 02:39:30,554 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:39:33,238 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:39:34,023 - root - INFO - [ai_service.py:522] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:39:35,759 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 02:39:36,684 - root - INFO - [ai_service.py:765] - IA identificou especialidade 'Cardiologia' para mensagem: 'Cardiologia'
2025-09-04 02:39:45,801 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: Cancelar consulta
2025-09-04 02:39:57,255 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: 11175343676
2025-09-04 02:40:05,418 - root - INFO - [ai_service.py:39] - Estado atual: horarios, Mensagem: ola
2025-09-04 02:40:05,419 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 02:40:05,619 - root - INFO - [ai_service.py:202] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:40:07,906 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: Cancelar consulta
2025-09-04 02:40:15,164 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 02:40:22,138 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Cancelar consulta
2025-09-04 02:40:22,841 - root - INFO - [ai_service.py:496] - IA não conseguiu identificar local para: 'Cancelar consulta'. Resposta IA: 'não encontrado'
2025-09-04 02:40:27,262 - root - INFO - [ai_service.py:39] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 02:40:28,091 - root - INFO - [ai_service.py:522] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 02:40:33,596 - root - INFO - [ai_service.py:39] - Estado atual: especialidade, Mensagem: ola
2025-09-04 02:40:33,596 - root - INFO - [ai_service.py:44] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 02:40:33,779 - root - INFO - [ai_service.py:202] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 02:40:37,727 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: Cancelar consulta
2025-09-04 02:40:47,996 - root - INFO - [ai_service.py:39] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:03:50,074 - root - INFO - [ai_service.py:42] - Estado atual: inicio, Mensagem: ola
2025-09-04 03:03:50,077 - root - INFO - [ai_service.py:56] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 03:03:50,963 - root - INFO - [ai_service.py:242] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 03:03:56,493 - root - INFO - [ai_service.py:42] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:04:02,803 - root - INFO - [ai_service.py:42] - Estado atual: cadastro, Mensagem: joaolayon
2025-09-04 03:04:11,836 - root - INFO - [ai_service.py:42] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 03:04:16,727 - root - INFO - [ai_service.py:1570] - Validando data: '22/01/2001'
2025-09-04 03:04:16,758 - root - INFO - [ai_service.py:1574] - Data limpa: '22/01/2001'
2025-09-04 03:04:16,769 - root - INFO - [ai_service.py:1583] - Data parseada com formato %d/%m/%Y: 2001-01-22
2025-09-04 03:04:16,769 - root - INFO - [ai_service.py:1604] - Data válida aceita: 2001-01-22
2025-09-04 03:04:16,769 - root - INFO - [ai_service.py:379] - Data armazenada nos dados: 2001-01-22
2025-09-04 03:04:24,453 - root - INFO - [ai_service.py:42] - Estado atual: cadastro, Mensagem: 31975317444
2025-09-04 03:04:28,235 - root - INFO - [ai_service.py:42] - Estado atual: cadastro, Mensagem: pular
2025-09-04 03:04:33,270 - root - INFO - [ai_service.py:42] - Estado atual: cadastro, Mensagem: particular
2025-09-04 03:04:36,086 - root - INFO - [ai_service.py:42] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:04:40,823 - root - INFO - [ai_service.py:604] - IA selecionou local: Belo Horizonte para mensagem: 'Belo Horizonte'
2025-09-04 03:04:42,473 - root - INFO - [ai_service.py:42] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 03:04:44,397 - root - INFO - [ai_service.py:877] - IA identificou especialidade 'Cardiologia' para mensagem: 'Cardiologia'
2025-09-04 03:04:46,798 - root - INFO - [ai_service.py:42] - Estado atual: horarios, Mensagem: 1
2025-09-04 03:04:53,996 - root - INFO - [ai_service.py:42] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 03:05:07,974 - root - INFO - [ai_service.py:42] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-04 03:05:07,978 - root - INFO - [ai_service.py:46] - Cancelamento detectado, mudando estado de 'finalizado' para 'cancelamento'
2025-09-04 03:05:14,333 - root - INFO - [ai_service.py:42] - Estado atual: cancelamento, Mensagem: 11175343676
2025-09-04 03:05:21,919 - root - INFO - [ai_service.py:42] - Estado atual: cancelamento, Mensagem: 1
2025-09-04 03:26:43,027 - SistemaAgendamento - INFO - [app_sqlite.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:27:48,988 - SistemaAgendamento - INFO - [app_sqlite.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:29:11,977 - root - INFO - [ai_service_sqlite.py:47] - Estado atual: inicio, Mensagem: ola
2025-09-04 03:29:11,977 - root - INFO - [ai_service_sqlite.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 03:29:12,782 - root - INFO - [ai_service_sqlite.py:239] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 03:29:21,819 - root - INFO - [ai_service_sqlite.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:41:44,716 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:43:37,433 - root - INFO - [ai_service.py:47] - Estado atual: inicio, Mensagem: Olá
2025-09-04 03:43:37,434 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 03:43:37,714 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 22
}
]. Usando fallback inteligente.
2025-09-04 03:43:45,208 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:43:50,640 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: Joao layon
2025-09-04 03:43:57,449 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: 22012001
2025-09-04 03:44:05,586 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 03:44:05,587 - root - INFO - [ai_service.py:375] - Data armazenada nos dados: 2001-01-22
2025-09-04 03:44:17,497 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: 31975317444
2025-09-04 03:44:26,981 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: Pular
2025-09-04 03:44:34,356 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: Particular
2025-09-04 03:44:36,991 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:44:37,098 - root - WARNING - [ai_service.py:586] - Erro na IA para seleção de local: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 22
}
]
2025-09-04 03:44:42,087 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Psiquiatria
2025-09-04 03:44:42,150 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 17
}
]
2025-09-04 03:45:04,888 - root - INFO - [ai_service.py:47] - Estado atual: horarios, Mensagem: Oi
2025-09-04 03:45:04,888 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 03:45:04,945 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 55
}
]. Usando fallback inteligente.
2025-09-04 03:45:09,930 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 03:45:12,870 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:45:15,309 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 03:45:15,372 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 44
}
]
2025-09-04 03:47:37,392 - root - INFO - [ai_service.py:47] - Estado atual: cadastro, Mensagem: ola
2025-09-04 03:47:37,392 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-04 03:47:37,497 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 22
}
]. Usando fallback inteligente.
2025-09-04 03:47:42,866 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:47:45,034 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:47:46,790 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 03:47:46,849 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 13
}
]
2025-09-04 03:49:29,400 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:49:35,071 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:49:45,682 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:50:08,234 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:50:37,204 - root - INFO - [ai_service.py:47] - Estado atual: horarios, Mensagem: ola
2025-09-04 03:50:37,204 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 03:50:37,513 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 22
}
]. Usando fallback inteligente.
2025-09-04 03:50:42,457 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:50:44,283 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:50:44,393 - root - WARNING - [ai_service.py:586] - Erro na IA para seleção de local: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 15
}
]
2025-09-04 03:50:45,966 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 03:50:46,018 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 14
}
]
2025-09-04 03:52:30,170 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:52:35,083 - root - INFO - [ai_service.py:47] - Estado atual: inicio, Mensagem: ola
2025-09-04 03:52:35,084 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 03:52:35,936 - root - INFO - [ai_service.py:239] - IA detectou tipo 'agendamento' para mensagem: 'ola'
2025-09-04 03:52:41,395 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 03:52:44,333 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 03:52:47,661 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Ortopedia
2025-09-04 03:52:47,747 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 12
}
]
2025-09-04 03:53:18,078 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 517, in top-level template code
    <a href="{{ url_for('editar_medico', medico_id=medico.id) }}" class="btn btn-primary btn-sm me-1" title="Editar Médico">
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1121, in url_for
    return self.handle_url_build_error(error, endpoint, values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1110, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'editar_medico' with values ['medico_id']. Did you mean 'admin_medicos' instead?
2025-09-04 03:54:51,600 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:55:09,109 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:55:55,726 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 574, in top-level template code
    <p class="mb-1"><strong>Horário:</strong> {{ horario.hora_inicio.strftime('%H:%M') }} - {{ horario.hora_fim.strftime('%H:%M') }}</p>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:55:58,415 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 574, in top-level template code
    <p class="mb-1"><strong>Horário:</strong> {{ horario.hora_inicio.strftime('%H:%M') }} - {{ horario.hora_fim.strftime('%H:%M') }}</p>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:56:20,299 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 574, in top-level template code
    <p class="mb-1"><strong>Horário:</strong> {{ horario.hora_inicio.strftime('%H:%M') }} - {{ horario.hora_fim.strftime('%H:%M') }}</p>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:56:28,259 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 574, in top-level template code
    <p class="mb-1"><strong>Horário:</strong> {{ horario.hora_inicio.strftime('%H:%M') }} - {{ horario.hora_fim.strftime('%H:%M') }}</p>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:57:44,258 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 574, in top-level template code
    <p class="mb-1"><strong>Horário:</strong> {{ horario.hora_inicio }} - {{ horario.hora_fim }}</p>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:57:55,399 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 03:58:11,258 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 743, in top-level template code
    <br><small class="text-muted">{{ paciente.data_nascimento.strftime('%d/%m/%Y') if paciente.data_nascimento else '' }}</small>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:58:38,443 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 743, in top-level template code
    <br><small class="text-muted">{{ paciente.data_nascimento.strftime('%d/%m/%Y') if paciente.data_nascimento else '' }}</small>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:58:43,531 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 743, in top-level template code
    <br><small class="text-muted">{{ paciente.data_nascimento.strftime('%d/%m/%Y') if paciente.data_nascimento else '' }}</small>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 03:58:55,835 - app - ERROR - [app.py:875] - Exception on /admin [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 247, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 322, in admin
    return render_template('admin.html',
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin.html", line 743, in top-level template code
    <br><small class="text-muted">{{ paciente.data_nascimento.strftime('%d/%m/%Y') if paciente.data_nascimento else '' }}</small>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 04:00:14,207 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:06:49,803 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:07:11,646 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:10:15,080 - root - INFO - [ai_service.py:47] - Estado atual: inicio, Mensagem: Oi
2025-09-04 04:10:15,080 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:10:15,457 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 44
}
]. Usando fallback inteligente.
2025-09-04 04:10:20,205 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:10:22,244 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:10:22,338 - root - WARNING - [ai_service.py:586] - Erro na IA para seleção de local: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 37
}
]
2025-09-04 04:10:26,392 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:10:26,486 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 33
}
]
2025-09-04 04:10:52,676 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:11:08,287 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:11:42,375 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:13:31,492 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:13:38,381 - root - INFO - [ai_service.py:47] - Estado atual: inicio, Mensagem: OLA
2025-09-04 04:13:38,382 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:13:38,956 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 21
}
]. Usando fallback inteligente.
2025-09-04 04:13:46,576 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 04:13:48,693 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:13:48,809 - root - WARNING - [ai_service.py:586] - Erro na IA para seleção de local: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 11
}
]
2025-09-04 04:13:53,507 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:13:53,572 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 6
}
]
2025-09-04 04:16:49,147 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:16:52,849 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:17:03,457 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:17:46,035 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:17:53,206 - root - INFO - [ai_service.py:47] - Estado atual: inicio, Mensagem: Ola
2025-09-04 04:17:53,206 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:17:53,490 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 6
}
]. Usando fallback inteligente.
2025-09-04 04:17:57,099 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:17:59,412 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:17:59,514 - root - WARNING - [ai_service.py:586] - Erro na IA para seleção de local: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
}
]
2025-09-04 04:18:02,313 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:18:02,376 - root - WARNING - [ai_service.py:731] - Erro na IA para seleção de especialidade: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 57
}
]
2025-09-04 04:19:39,229 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:19:57,655 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:20:23,579 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:20:47,418 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:20:54,930 - root - INFO - [ai_service.py:47] - Estado atual: horarios, Mensagem: Ola
2025-09-04 04:20:54,931 - root - INFO - [ai_service.py:61] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:20:55,258 - root - WARNING - [ai_service.py:250] - IA temporariamente indisponível: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerDayPerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-1.5-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 50
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 4
}
]. Usando fallback inteligente.
2025-09-04 04:20:58,924 - root - INFO - [ai_service.py:47] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:21:01,430 - root - INFO - [ai_service.py:47] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:21:04,223 - root - INFO - [ai_service.py:47] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:25:20,929 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:25:28,106 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:25:28,107 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:25:28,575 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:25:33,143 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:25:36,381 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:25:39,678 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:26:44,380 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:27:14,079 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:27:14,080 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:27:14,532 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:27:21,251 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:27:23,187 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:27:25,865 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:28:50,524 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:28:50,525 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:28:50,830 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:28:51,296 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 04:28:51,296 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 04:28:51,669 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:28:52,448 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 04:28:52,448 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 04:28:52,751 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:28:58,278 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 04:29:00,105 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:29:02,010 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:31:28,621 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:31:37,940 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:32:14,585 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:32:26,618 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:35:09,118 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:35:09,118 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:35:09,664 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:35:13,266 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:35:15,299 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:35:17,819 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Neuro Pediatra
2025-09-04 04:36:21,750 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:36:51,958 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:36:58,012 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:37:06,538 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:37:48,701 - root - INFO - [ai_service.py:46] - Estado atual: inicio, Mensagem: Oi
2025-09-04 04:37:48,702 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:37:49,025 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:37:54,052 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:38:02,142 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: Joaolayon072@gmail.com
2025-09-04 04:38:02,142 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-04 04:38:02,448 - root - INFO - [ai_service.py:244] - IA detectou tipo 'fora_escopo' para mensagem: 'Joaolayon072@gmail.com'
2025-09-04 04:38:13,466 - root - INFO - [ai_service.py:46] - Estado atual: inicio, Mensagem: Oi
2025-09-04 04:38:13,466 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:38:13,902 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:38:20,313 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: Joao layon
2025-09-04 04:38:26,691 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:38:32,279 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: João layon
2025-09-04 04:38:43,070 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 04:38:43,074 - root - INFO - [ai_service.py:380] - Data armazenada nos dados: 2001-01-22
2025-09-04 04:39:00,000 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: 3091-5234
2025-09-04 04:39:12,732 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: 31 99528-1707
2025-09-04 04:39:16,953 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: Pular
2025-09-04 04:39:23,040 - root - INFO - [ai_service.py:46] - Estado atual: cadastro, Mensagem: 1029938492
2025-09-04 04:39:28,023 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:39:31,502 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Oftalmologia
2025-09-04 04:39:38,075 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Pediatria
2025-09-04 04:39:38,075 - root - INFO - [ai_service.py:655] - DEBUG _processar_horarios: local_id=2, especialidade_id=8, dados={'cpf': '11175343676', 'etapa_cadastro': 'carteirinha', 'nome': 'João layon', 'data_nascimento': '2001-01-22', 'telefone': '31995281707', 'email': None, 'carteirinha': '1029938492', 'tipo_atendimento': 'plano', 'paciente_id': 1, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 8, 'especialidade_nome': 'Oftalmologia'}
2025-09-04 04:39:38,076 - root - INFO - [ai_service.py:672] - DEBUG query result: encontrou 0 registros
2025-09-04 04:39:38,076 - root - ERROR - [ai_service.py:677] - ERRO: Nenhum médico/horário encontrado para especialidade_id=8, local_id=2
2025-09-04 04:41:22,304 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:41:22,304 - root - INFO - [ai_service.py:60] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:41:22,620 - root - INFO - [ai_service.py:244] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 04:41:25,704 - root - INFO - [ai_service.py:46] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 04:41:28,207 - root - INFO - [ai_service.py:46] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:41:31,565 - root - INFO - [ai_service.py:46] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 04:41:37,605 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Psiquiatria
2025-09-04 04:41:37,605 - root - INFO - [ai_service.py:655] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 04:41:37,606 - root - INFO - [ai_service.py:672] - DEBUG query result: encontrou 2 registros
2025-09-04 04:41:37,606 - root - INFO - [ai_service.py:674] - DEBUG primeiro registro: {'id': 2, 'nome': 'Dra. Maria Santos', 'crm': '23456-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 2, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 04:42:16,687 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Clínica Geral
2025-09-04 04:42:16,687 - root - INFO - [ai_service.py:655] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 04:42:16,688 - root - INFO - [ai_service.py:672] - DEBUG query result: encontrou 2 registros
2025-09-04 04:42:16,688 - root - INFO - [ai_service.py:674] - DEBUG primeiro registro: {'id': 2, 'nome': 'Dra. Maria Santos', 'crm': '23456-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 2, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 04:42:24,922 - root - INFO - [ai_service.py:46] - Estado atual: horarios, Mensagem: Ortopedia
2025-09-04 04:42:24,923 - root - INFO - [ai_service.py:655] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 04:42:24,923 - root - INFO - [ai_service.py:672] - DEBUG query result: encontrou 2 registros
2025-09-04 04:42:24,923 - root - INFO - [ai_service.py:674] - DEBUG primeiro registro: {'id': 2, 'nome': 'Dra. Maria Santos', 'crm': '23456-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 2, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 04:48:44,154 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:49:26,151 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 04:49:26,151 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 04:49:26,151 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 04:49:38,157 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 04:49:56,351 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 04:49:58,907 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oftalmologia
2025-09-04 04:51:22,178 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 04:51:22,178 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:51:22,178 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 04:51:24,941 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 04:51:28,164 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 04:51:30,728 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 04:51:48,224 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Cardiologia
2025-09-04 04:51:48,224 - root - INFO - [ai_service.py:671] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 04:51:48,225 - root - INFO - [ai_service.py:688] - DEBUG query result: encontrou 6 registros
2025-09-04 04:51:48,225 - root - INFO - [ai_service.py:690] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 04:51:58,104 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Dermatologia
2025-09-04 04:51:58,104 - root - INFO - [ai_service.py:671] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 04:51:58,104 - root - INFO - [ai_service.py:688] - DEBUG query result: encontrou 6 registros
2025-09-04 04:51:58,104 - root - INFO - [ai_service.py:690] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 04:57:27,257 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:57:32,009 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:57:55,949 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:58:28,714 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 04:58:41,970 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: ola
2025-09-04 04:58:41,971 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 04:58:41,972 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 04:58:55,446 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 05:00:57,234 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 05:00:57,235 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 05:00:57,235 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 05:01:11,745 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 05:01:15,383 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 05:01:18,345 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 05:01:28,909 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Ginecologia
2025-09-04 05:01:28,910 - root - INFO - [ai_service.py:671] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 05:01:28,910 - root - INFO - [ai_service.py:688] - DEBUG query result: encontrou 1 registros
2025-09-04 05:01:28,910 - root - INFO - [ai_service.py:690] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 11:43:59,831 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:46:54,200 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 11:47:02,552 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Ortopedia
2025-09-04 11:49:22,059 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:53:36,800 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oftalmologia
2025-09-04 11:53:36,800 - root - INFO - [ai_service.py:671] - DEBUG _processar_horarios: local_id=2, especialidade_id=6, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 6, 'especialidade_nome': 'Ortopedia'}
2025-09-04 11:53:36,801 - root - INFO - [ai_service.py:688] - DEBUG query result: encontrou 5 registros
2025-09-04 11:53:36,801 - root - INFO - [ai_service.py:690] - DEBUG primeiro registro: {'id': 6, 'nome': 'Dra. Julia Fernandes', 'crm': '67890-SP', 'especialidade_id': 6, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 6, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 11:55:30,601 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:55:47,457 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:56:01,140 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:57:15,688 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 11:57:24,411 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 11:57:24,411 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 11:57:24,411 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 11:57:36,154 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 11:57:39,441 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 11:57:43,967 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oftalmologia
2025-09-04 11:57:50,321 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Dermatologia
2025-09-04 11:57:50,321 - root - INFO - [ai_service.py:671] - DEBUG _processar_horarios: local_id=2, especialidade_id=8, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 8, 'especialidade_nome': 'Oftalmologia'}
2025-09-04 11:57:50,322 - root - INFO - [ai_service.py:688] - DEBUG query result: encontrou 0 registros
2025-09-04 11:57:50,322 - root - ERROR - [ai_service.py:693] - ERRO: Nenhum médico/horário encontrado para especialidade_id=8, local_id=2
2025-09-04 12:01:07,654 - SistemaAgendamento - INFO - [app.py:523] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:06:53,781 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 12:06:53,781 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 12:06:53,781 - root - WARNING - [ai_service.py:271] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 12:06:58,769 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:07:00,547 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:07:02,875 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Ortopedia
2025-09-04 12:08:03,884 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:09:27,221 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:09:28,920 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:09:46,411 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:10:16,714 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 12:10:16,714 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 12:10:17,196 - root - INFO - [ai_service.py:259] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 12:10:23,669 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:10:26,169 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:10:29,081 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Ortopedia
2025-09-04 12:11:52,746 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:12:00,106 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:15:38,012 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 12:15:38,012 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 12:15:38,496 - root - INFO - [ai_service.py:259] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 12:15:45,885 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:15:51,431 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:15:53,329 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 12:15:53,330 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:15:53,331 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 12:15:53,331 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:15:58,772 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Ginecologia
2025-09-04 12:15:58,772 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:15:58,772 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 12:15:58,772 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:17:53,868 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 12:17:53,868 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 12:17:54,131 - root - INFO - [ai_service.py:259] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 12:18:00,115 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:18:01,647 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:18:13,220 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 12:18:13,222 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:13,222 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:13,223 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:22,247 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oftalmologia
2025-09-04 12:18:22,247 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:22,248 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:22,248 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:24,579 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Cardiologia
2025-09-04 12:18:24,579 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:24,580 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:24,580 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:27,626 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Dermatologia
2025-09-04 12:18:27,626 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:27,627 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:27,627 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:31,749 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Pediatria
2025-09-04 12:18:31,749 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:31,749 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:31,750 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:35,931 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:18:35,973 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Ginecologia
2025-09-04 12:18:35,973 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:18:35,974 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:18:35,974 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:18:38,651 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:18:57,896 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: oi
2025-09-04 12:18:57,897 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 12:18:58,449 - root - INFO - [ai_service.py:259] - IA detectou tipo 'agendamento' para mensagem: 'oi'
2025-09-04 12:19:07,021 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:19:09,097 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:19:12,068 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 12:19:12,069 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:19:12,070 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:19:12,070 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:36:03,529 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:37:23,795 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:39:09,089 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 12:39:09,090 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 12:39:09,654 - root - INFO - [ai_service.py:259] - IA detectou tipo 'agendamento' para mensagem: 'Oi'
2025-09-04 12:39:15,743 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:39:18,861 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:39:20,775 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 12:39:20,776 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'Clínica Geral'}
2025-09-04 12:39:20,776 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 12:39:20,776 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Dr. João Silva', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 04:37:05', 'medico_id': 1, 'local_id': 2, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 12:39:36,669 - root - ERROR - [app.py:829] - Erro ao atualizar médico: no such column: pacientes_por_horario
2025-09-04 12:40:14,339 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:48:00,203 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:52:21,711 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:52:40,576 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:53:36,154 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 12:57:04,309 - SistemaAgendamento - INFO - [app.py:97] - Limpeza: 2 conversas abandonadas removidas
2025-09-04 12:57:04,310 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 12:57:04,310 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 12:57:04,310 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 12:58:24,474 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 12:58:26,636 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 12:58:28,370 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Clínica Geral
2025-09-04 13:02:57,287 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:04:28,884 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:04:28,885 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:04:28,885 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:04:33,655 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:04:35,880 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 13:04:42,494 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Cardiologia
2025-09-04 13:04:44,715 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Dermatologia
2025-09-04 13:04:44,715 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 13:04:44,715 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 13:04:44,716 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=2, local_id=1
2025-09-04 13:04:47,313 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Clínica Geral
2025-09-04 13:04:47,313 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 13:04:47,313 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 13:04:47,314 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=2, local_id=1
2025-09-04 13:04:50,270 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Pediatria
2025-09-04 13:04:50,270 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 13:04:50,271 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 13:04:50,271 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=2, local_id=1
2025-09-04 13:04:53,038 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oftalmologia
2025-09-04 13:04:53,038 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Cardiologia'}
2025-09-04 13:04:53,039 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 13:04:53,039 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=2, local_id=1
2025-09-04 13:07:37,703 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:08:16,264 - root - ERROR - [app.py:912] - Erro ao deletar médico: FOREIGN KEY constraint failed
2025-09-04 13:09:44,386 - root - ERROR - [app.py:912] - Erro ao deletar médico: FOREIGN KEY constraint failed
2025-09-04 13:10:23,744 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:10:32,489 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:12:16,992 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:14:08,689 - app - ERROR - [app.py:875] - Exception on /admin/config [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 248, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 347, in admin_config
    return render_template('admin_config.html', configuracoes=configuracoes, locais=Local.find_all())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin_config.html", line 412, in top-level template code
    form.action = '{{ url_for("zerar_banco_dados") }}';
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1121, in url_for
    return self.handle_url_build_error(error, endpoint, values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1110, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'zerar_banco_dados'. Did you mean 'listar_agendamentos' instead?
2025-09-04 13:19:02,940 - app - ERROR - [app.py:875] - Exception on /admin/config [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 248, in decorated_function
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 347, in admin_config
    return render_template('admin_config.html', configuracoes=configuracoes, locais=Local.find_all())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/admin_config.html", line 412, in top-level template code
    form.action = '{{ url_for("zerar_banco_dados") }}';
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1121, in url_for
    return self.handle_url_build_error(error, endpoint, values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1110, in url_for
    rv = url_adapter.build(  # type: ignore[union-attr]
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/werkzeug/routing/map.py", line 924, in build
    raise BuildError(endpoint, values, method, self)
werkzeug.routing.exceptions.BuildError: Could not build url for endpoint 'zerar_banco_dados'. Did you mean 'listar_agendamentos' instead?
2025-09-04 13:19:45,641 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 13:19:45,641 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 13:19:45,641 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:19:52,462 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:19:59,110 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: joao layon
2025-09-04 13:20:05,706 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 13:20:05,708 - root - INFO - [ai_service.py:395] - Data armazenada nos dados: 2001-01-22
2025-09-04 13:20:11,815 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31971280512
2025-09-04 13:20:16,756 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: pular
2025-09-04 13:20:27,943 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:20:35,148 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:20:45,590 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: particular
2025-09-04 13:21:06,463 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:25:49,178 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-04 13:25:49,178 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 13:25:49,178 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:26:29,021 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:26:31,351 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:26:33,148 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:26:33,149 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:26:33,150 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 13:26:33,150 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:29:03,728 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:29:18,559 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:29:34,893 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:29:34,894 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:29:34,894 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:29:45,824 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:29:48,749 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:29:50,041 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:29:50,044 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:29:50,045 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 13:29:50,045 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:29:50,045 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:29:50.045814, rows=1
2025-09-04 13:29:50,046 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:29:50,046 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:29:50,046 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:29:50,046 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:29:50,047 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:29:50,048 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:29:50,048 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:29:50,048 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:29:50,048 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:29:50,055 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:29:50,057 - root - ERROR - [ai_service.py:1036] - Erro em _gerar_horarios_disponiveis: 'sqlite3.Row' object has no attribute 'get'
2025-09-04 13:29:50,058 - root - ERROR - [ai_service.py:1038] - Traceback: Traceback (most recent call last):
  File "/home/runner/workspace/ai_service.py", line 1010, in _gerar_horarios_disponiveis
    'crm': row.get('crm', 'N/A'),
           ^^^^^^^
AttributeError: 'sqlite3.Row' object has no attribute 'get'

2025-09-04 13:31:07,839 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:31:07,839 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:31:07,839 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:31:13,764 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:31:15,358 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:31:16,466 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:31:16,467 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:31:16,467 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:31:16,467 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:31:16.468071, rows=2
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:31:16.468635
2025-09-04 13:31:16,468 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:31:16.468728
2025-09-04 13:31:16,469 - root - ERROR - [ai_service.py:1036] - Erro em _gerar_horarios_disponiveis: 'sqlite3.Row' object has no attribute 'get'
2025-09-04 13:31:16,470 - root - ERROR - [ai_service.py:1038] - Traceback: Traceback (most recent call last):
  File "/home/runner/workspace/ai_service.py", line 1010, in _gerar_horarios_disponiveis
    'crm': row.get('crm', 'N/A'),
           ^^^^^^^
AttributeError: 'sqlite3.Row' object has no attribute 'get'

2025-09-04 13:32:20,510 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:32:30,509 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:32:55,736 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:32:55,736 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:32:55,736 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:33:02,717 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:33:04,514 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:33:06,431 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:33:06,434 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:33:06,435 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:33:06,435 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:33:06,436 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:33:06.436080, rows=2
2025-09-04 13:33:06,436 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:33:06,436 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:33:06,438 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:33:06,454 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:33:06,455 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:33:06.455229
2025-09-04 13:33:06,455 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:33:06.455662
2025-09-04 13:33:06,457 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,464 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,464 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:33:06,465 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:33:06,465 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:33:06,465 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:33:06,466 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:33:06,466 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:33:06,466 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:33:06,468 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:33:06,469 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:33:06,469 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:33:06,469 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:33:06,470 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:33:06,470 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:33:06,470 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:33:06,471 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:33:06,471 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:33:06,472 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,476 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,482 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,483 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:33:06,483 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:33:06,483 - root - INFO - [ai_service.py:1032] - DEBUG total de horários gerados: 6
2025-09-04 13:34:18,295 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:34:27,492 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:35:20,563 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:35:20,563 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:35:20,564 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:35:32,156 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:35:35,581 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:35:37,311 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:35:37,312 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:35:37,313 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:35:37,313 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:35:37,313 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:35:37.313855, rows=2
2025-09-04 13:35:37,314 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:35:37,314 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:35:37,314 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:35:37,316 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:35:37,316 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:35:37.316435
2025-09-04 13:35:37,316 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:35:37.316584
2025-09-04 13:35:37,317 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,319 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,319 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:35:37,319 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:35:37,319 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:35:37,319 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:35:37,320 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:35:37,321 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:35:37,321 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:35:37,321 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:35:37,324 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,325 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,328 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,330 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:35:37,330 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:35:37,330 - root - INFO - [ai_service.py:1035] - DEBUG total de horários gerados: 6
2025-09-04 13:35:37,330 - root - INFO - [ai_service.py:1036] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:36:46,768 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:37:27,321 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:38:54,291 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:38:58,939 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 13:38:58,939 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 13:38:58,940 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:39:05,112 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:39:06,759 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:39:14,851 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:39:14,852 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:39:14,853 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:39:14,853 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:39:14,853 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:39:14.853795, rows=2
2025-09-04 13:39:14,853 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:39:14,854 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:39:14,854 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:39:14,859 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:14,859 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:39:14.859675
2025-09-04 13:39:14,859 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:39:14.859914
2025-09-04 13:39:14,862 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,863 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,863 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:39:14,863 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:39:14,863 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:39:14,863 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:39:14,864 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:39:14,867 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:14,869 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,871 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,873 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,874 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:14,874 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:39:14,874 - root - INFO - [ai_service.py:1035] - DEBUG total de horários gerados: 6
2025-09-04 13:39:14,874 - root - INFO - [ai_service.py:1036] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:39:50,029 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 13:39:50,029 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:39:50.030220, rows=2
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:39:50.030696
2025-09-04 13:39:50,030 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:39:50.030798
2025-09-04 13:39:50,032 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,033 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,033 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:39:50,033 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:39:50,033 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:39:50,033 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:39:50,034 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:39:50,035 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:50,038 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,041 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,042 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,043 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:50,043 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:39:50,043 - root - INFO - [ai_service.py:1035] - DEBUG total de horários gerados: 6
2025-09-04 13:39:50,043 - root - INFO - [ai_service.py:1036] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:39:53,803 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 13:39:53,803 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:39:53,804 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:39:53,804 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:39:53,804 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:39:53.804658, rows=2
2025-09-04 13:39:53,804 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:39:53,804 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:39:53,805 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:39:53,805 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:53,805 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:39:53.805475
2025-09-04 13:39:53,805 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:39:53.805653
2025-09-04 13:39:53,806 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,807 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:39:53,808 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:39:53,809 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:39:53,810 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:39:53,811 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,811 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,812 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,813 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:39:53,813 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:39:53,813 - root - INFO - [ai_service.py:1035] - DEBUG total de horários gerados: 6
2025-09-04 13:39:53,814 - root - INFO - [ai_service.py:1036] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:40:26,645 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:40:35,934 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:40:42,767 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:40:42,767 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:40:42,767 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:40:49,327 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:40:52,644 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:40:54,658 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:40:54,660 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:40:54.662470, rows=2
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:40:54,662 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:40:54,666 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:40:54,666 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:40:54.666536
2025-09-04 13:40:54,666 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:40:54.666673
2025-09-04 13:40:54,667 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:40:54,669 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:40:54,670 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:40:54,671 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,672 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,674 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,675 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:40:54,675 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:40:54,675 - root - INFO - [ai_service.py:1045] - DEBUG total de horários gerados: 6
2025-09-04 13:40:54,676 - root - INFO - [ai_service.py:1046] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:41:01,118 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 13:41:01,118 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:41:01.119597, rows=2
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:41:01,119 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:41:01,120 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:41:01,120 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:41:01.120302
2025-09-04 13:41:01,120 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:41:01.120449
2025-09-04 13:41:01,121 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,122 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,122 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:41:01,122 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:41:01,122 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:41:01,123 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:41:01,124 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:41:01,125 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,125 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,126 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,127 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:41:01,127 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:41:01,127 - root - INFO - [ai_service.py:1045] - DEBUG total de horários gerados: 6
2025-09-04 13:41:01,127 - root - INFO - [ai_service.py:1046] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:42:44,039 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:42:50,685 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:43:00,043 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 13:43:00,044 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 13:43:00,044 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:43:06,689 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:43:19,196 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:43:20,465 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:43:20,466 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:43:20.467612, rows=2
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:43:20,467 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:43:20,469 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:43:20,469 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:43:20.469584
2025-09-04 13:43:20,469 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:43:20.469705
2025-09-04 13:43:20,470 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:43:20,472 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:43:20,473 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:43:20,474 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,476 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,477 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,478 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:43:20,479 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:43:20,479 - root - INFO - [ai_service.py:1045] - DEBUG total de horários gerados: 6
2025-09-04 13:43:20,479 - root - INFO - [ai_service.py:1046] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:43:23,087 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 4
2025-09-04 13:43:23,087 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:43:23,087 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:43:23,087 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:948] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:43:23.088044, rows=2
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:958] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 13:00:00 <= 14:43:23.088723
2025-09-04 13:43:23,088 - root - INFO - [ai_service.py:993] - DEBUG pulando horário passado: 14:00:00 <= 14:43:23.088822
2025-09-04 13:43:23,089 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:958] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:958] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:958] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:43:23,091 - root - INFO - [ai_service.py:962] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:958] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:958] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:958] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:43:23,092 - root - INFO - [ai_service.py:976] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:43:23,093 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,094 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,095 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,095 - root - INFO - [ai_service.py:1022] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:43:23,095 - root - INFO - [ai_service.py:967] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:43:23,096 - root - INFO - [ai_service.py:1045] - DEBUG total de horários gerados: 6
2025-09-04 13:43:23,096 - root - INFO - [ai_service.py:1046] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:43:29,261 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 13:44:59,997 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:45:10,884 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:48:51,881 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:48:58,684 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:49:05,927 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:50:48,403 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:50:57,103 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:51:13,060 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:56:55,023 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-04 13:56:55,023 - root - INFO - [ai_service.py:65] - Cancelamento detectado, mudando estado de 'finalizado' para 'cancelamento'
2025-09-04 13:56:57,151 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: Oi
2025-09-04 13:56:57,151 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'cancelamento' para 'inicio'
2025-09-04 13:56:57,151 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:57:04,750 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:57:06,614 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:57:08,370 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:57:08,371 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:57:08,371 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:57:08,372 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:57:08,372 - root - INFO - [ai_service.py:969] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:57:08.372249, rows=2
2025-09-04 13:57:08,372 - root - INFO - [ai_service.py:979] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:57:08,372 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:57:08,372 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:57:08,379 - root - INFO - [ai_service.py:997] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:57:08,385 - root - INFO - [ai_service.py:1014] - DEBUG pulando horário passado: 13:00:00 <= 14:57:08.385666
2025-09-04 13:57:08,386 - root - INFO - [ai_service.py:1014] - DEBUG pulando horário passado: 14:00:00 <= 14:57:08.386263
2025-09-04 13:57:08,388 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:57:08,392 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:57:08,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:57:08,393 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:57:08,394 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:57:08,394 - root - INFO - [ai_service.py:979] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:57:08,394 - root - INFO - [ai_service.py:983] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:57:08,394 - root - INFO - [ai_service.py:979] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:57:08,394 - root - INFO - [ai_service.py:983] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:57:08,395 - root - INFO - [ai_service.py:979] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:57:08,395 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:979] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:979] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:57:08,398 - root - INFO - [ai_service.py:997] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:57:08,400 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:57:08,401 - root - INFO - [ai_service.py:1045] - DEBUG horário ocupado: 2025-09-10 14:00:00
2025-09-04 13:57:08,402 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:57:08,408 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:57:08,411 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:57:08,413 - root - INFO - [ai_service.py:1066] - DEBUG total de horários gerados: 5
2025-09-04 13:57:08,413 - root - INFO - [ai_service.py:1067] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:57:11,385 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 13:57:11,385 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:57:11,386 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:57:11,387 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:57:11,387 - root - INFO - [ai_service.py:969] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:57:11.387262, rows=2
2025-09-04 13:57:11,387 - root - INFO - [ai_service.py:979] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:57:11,388 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:57:11,388 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:57:11,388 - root - INFO - [ai_service.py:997] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:57:11,388 - root - INFO - [ai_service.py:1014] - DEBUG pulando horário passado: 13:00:00 <= 14:57:11.388874
2025-09-04 13:57:11,389 - root - INFO - [ai_service.py:1014] - DEBUG pulando horário passado: 14:00:00 <= 14:57:11.389261
2025-09-04 13:57:11,391 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-04 15:00:00 - Dr. Rafael Elian
2025-09-04 13:57:11,392 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:983] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:983] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:57:11,393 - root - INFO - [ai_service.py:979] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:57:11,394 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:57:11,394 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:57:11,394 - root - INFO - [ai_service.py:979] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:57:11,394 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:57:11,394 - root - INFO - [ai_service.py:997] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:57:11,395 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:57:11,396 - root - INFO - [ai_service.py:1045] - DEBUG horário ocupado: 2025-09-10 14:00:00
2025-09-04 13:57:11,397 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:57:11,399 - root - INFO - [ai_service.py:1043] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:57:11,399 - root - INFO - [ai_service.py:988] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1066] - DEBUG total de horários gerados: 5
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1067] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1157] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1158] - DEBUG horarios_disponiveis count: 5
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1165] - DEBUG numero_match: 1, indice=0
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:1168] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:57:11,400 - root - INFO - [ai_service.py:740] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '15:00', 'data_formatada': '04/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1756998000.0}
2025-09-04 13:57:11,401 - root - INFO - [ai_service.py:741] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:57:15,568 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 13:57:15,582 - root - ERROR - [ai_service.py:859] - Erro ao criar agendamento: 'Local' object has no attribute 'estado'
2025-09-04 13:58:05,698 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:58:19,968 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 13:58:32,766 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 13:58:32,766 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 13:58:32,766 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:58:35,751 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 13:58:35,751 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 13:58:35,751 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:58:36,248 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 13:58:36,248 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 13:58:36,248 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 13:58:42,807 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 13:58:44,411 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 13:58:46,408 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 13:58:46,409 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:58:46.410535, rows=2
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:58:46,410 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:58:46,412 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:58:46,412 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 14:58:46.412630
2025-09-04 13:58:46,412 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 14:58:46.412855
2025-09-04 13:58:46,413 - root - INFO - [ai_service.py:1043] - DEBUG horário ocupado: 2025-09-04 15:00:00
2025-09-04 13:58:46,414 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:58:46,414 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:58:46,414 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:58:46,415 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:58:46,416 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:58:46,420 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:58:46,421 - root - INFO - [ai_service.py:1043] - DEBUG horário ocupado: 2025-09-10 14:00:00
2025-09-04 13:58:46,422 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:58:46,423 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:58:46,423 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:58:46,424 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 4
2025-09-04 13:58:46,424 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 13:58:47,777 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 4
2025-09-04 13:58:47,777 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=13:58:47.778452, rows=2
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 13:58:47,778 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:58:47,779 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 14:58:47.779151
2025-09-04 13:58:47,779 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 14:58:47.779320
2025-09-04 13:58:47,779 - root - INFO - [ai_service.py:1043] - DEBUG horário ocupado: 2025-09-04 15:00:00
2025-09-04 13:58:47,780 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 13:58:47,781 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 13:58:47,782 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 13:58:47,783 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 13:58:47,784 - root - INFO - [ai_service.py:1043] - DEBUG horário ocupado: 2025-09-10 14:00:00
2025-09-04 13:58:47,785 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 13:58:47,786 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 13:58:47,787 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 13:58:47,787 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 4
2025-09-04 13:58:47,787 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:1155] - DEBUG _interpretar_escolha_horario: mensagem='4'
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:1156] - DEBUG horarios_disponiveis count: 4
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:1163] - DEBUG numero_match: 4, indice=3
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:1166] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:740] - DEBUG _processar_horarios: mensagem='4', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-04 13:58:47,788 - root - INFO - [ai_service.py:741] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 13:58:50,447 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 13:58:57,727 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 13:59:05,731 - root - INFO - [ai_service.py:61] - Estado atual: consulta_agendamentos, Mensagem: 11175343676
2025-09-04 13:59:14,596 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-04 13:59:14,596 - root - INFO - [ai_service.py:65] - Cancelamento detectado, mudando estado de 'finalizado' para 'cancelamento'
2025-09-04 13:59:21,723 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 11175343676
2025-09-04 13:59:27,639 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 1
2025-09-04 13:59:32,061 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-04 13:59:32,061 - root - INFO - [ai_service.py:65] - Cancelamento detectado, mudando estado de 'finalizado' para 'cancelamento'
2025-09-04 13:59:38,744 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 11175343676
2025-09-04 13:59:41,365 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 2
2025-09-04 14:02:49,438 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:09:34,459 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: oi
2025-09-04 14:09:34,459 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 14:09:34,459 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:09:57,631 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 18542921615
2025-09-04 14:10:12,405 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Benedito Higino
2025-09-04 14:10:32,767 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 01/03/2000
2025-09-04 14:10:32,771 - root - INFO - [ai_service.py:395] - Data armazenada nos dados: 2000-03-01
2025-09-04 14:10:43,556 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31993101605
2025-09-04 14:10:51,961 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: pular
2025-09-04 14:11:07,312 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 03201303014
2025-09-04 14:11:18,457 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:11:22,850 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:11:22,851 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '18542921615', 'etapa_cadastro': 'carteirinha', 'nome': 'Benedito Higino', 'data_nascimento': '2000-03-01', 'telefone': '31993101605', 'email': None, 'carteirinha': '03201303014', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:11:22,852 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 14:11:22,852 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=1, local_id=1
2025-09-04 14:11:32,714 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Avaliação - terapia
2025-09-04 14:11:32,715 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '18542921615', 'etapa_cadastro': 'carteirinha', 'nome': 'Benedito Higino', 'data_nascimento': '2000-03-01', 'telefone': '31993101605', 'email': None, 'carteirinha': '03201303014', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:11:32,715 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 14:11:32,715 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=1, local_id=1
2025-09-04 14:11:41,201 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Belo Horizonte
2025-09-04 14:11:41,202 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '18542921615', 'etapa_cadastro': 'carteirinha', 'nome': 'Benedito Higino', 'data_nascimento': '2000-03-01', 'telefone': '31993101605', 'email': None, 'carteirinha': '03201303014', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:11:41,203 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 14:11:41,204 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=1, local_id=1
2025-09-04 14:11:48,367 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: oi
2025-09-04 14:11:48,367 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 14:11:48,367 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:12:06,457 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 18542921615
2025-09-04 14:12:08,366 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 14:12:12,690 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:12:12,691 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '18542921615', 'paciente_id': 2, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:12:12,692 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 14:12:12,692 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:12:12,692 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:12:12.692852, rows=2
2025-09-04 14:12:12,693 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:12:12,693 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:12:12,693 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:12:12,693 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:12:12,694 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 15:12:12.693996
2025-09-04 14:12:12,694 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 15:12:12.694178
2025-09-04 14:12:12,694 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 15:00:00 <= 15:12:12.694340
2025-09-04 14:12:12,695 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 14:12:12,695 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:12:12,695 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:12:12,695 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 14:12:12,695 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:12:12,696 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:12:12,697 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 14:12:12,697 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:12:12,697 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:12:12,697 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:12:12,698 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:12:12,699 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:12:12,700 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:12:12,702 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:12:12,702 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 14:12:12,707 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 5
2025-09-04 14:12:12,707 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:12:19,149 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 14:12:19,149 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '18542921615', 'paciente_id': 2, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:12:19,150 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 14:12:19,150 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:12:19,150 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:12:19.150222, rows=2
2025-09-04 14:12:19,150 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 15:12:19.151664
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 15:12:19.151786
2025-09-04 14:12:19,151 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 15:00:00 <= 15:12:19.151888
2025-09-04 14:12:19,152 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:12:19,153 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:12:19,154 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:12:19,154 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:12:19,155 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:12:19,156 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:12:19,157 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:12:19,157 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 14:12:19,157 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 5
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:1155] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:1156] - DEBUG horarios_disponiveis count: 5
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:1163] - DEBUG numero_match: 1, indice=0
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:1166] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:740] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:12:19,158 - root - INFO - [ai_service.py:741] - DEBUG dados atuais antes da escolha: {'cpf': '18542921615', 'paciente_id': 2, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:12:26,615 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 14:14:22,439 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Cancelar consulta
2025-09-04 14:14:22,439 - root - INFO - [ai_service.py:65] - Cancelamento detectado, mudando estado de 'finalizado' para 'cancelamento'
2025-09-04 14:14:27,199 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 18542921615
2025-09-04 14:14:36,603 - root - INFO - [ai_service.py:61] - Estado atual: cancelamento, Mensagem: 1
2025-09-04 14:14:41,094 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 14:14:44,811 - root - INFO - [ai_service.py:61] - Estado atual: consulta_agendamentos, Mensagem: 18542921615
2025-09-04 14:14:56,527 - app - ERROR - [app.py:875] - Exception on /agendamentos [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 51, in listar_agendamentos
    return render_template('agendamentos.html', agendamentos=agendamentos, admin=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/agendamentos.html", line 350, in top-level template code
    <span class="appointment-date">{{ agendamento.data.strftime('%d/%m/%Y') }}</span>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 14:15:02,491 - app - ERROR - [app.py:875] - Exception on /agendamentos [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 51, in listar_agendamentos
    return render_template('agendamentos.html', agendamentos=agendamentos, admin=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/agendamentos.html", line 350, in top-level template code
    <span class="appointment-date">{{ agendamento.data.strftime('%d/%m/%Y') }}</span>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 14:15:05,689 - app - ERROR - [app.py:875] - Exception on /agendamentos [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 51, in listar_agendamentos
    return render_template('agendamentos.html', agendamentos=agendamentos, admin=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/agendamentos.html", line 350, in top-level template code
    <span class="appointment-date">{{ agendamento.data.strftime('%d/%m/%Y') }}</span>
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 14:21:09,678 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:21:42,945 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:22:05,369 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 14:22:05,370 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 14:22:05,370 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:22:52,040 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11702224635
2025-09-04 14:23:17,131 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Oi
2025-09-04 14:23:17,131 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-04 14:23:17,131 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:23:21,080 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 14:23:31,254 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 14:23:37,813 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:23:37,814 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:23:37,814 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 14:23:37,815 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:23:37,815 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:23:37.815273, rows=2
2025-09-04 14:23:37,815 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:23:37,815 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:23:37,815 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:23:37,817 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:37,817 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 15:23:37.817699
2025-09-04 14:23:37,817 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 15:23:37.817852
2025-09-04 14:23:37,818 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 15:00:00 <= 15:23:37.817994
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:23:37,819 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:23:37,820 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:37,822 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,823 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,824 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:977] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:23:37,825 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:37,830 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 13:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,831 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 14:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,832 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 15:00:00 - Dr. Rafael Elian
2025-09-04 14:23:37,833 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 8
2025-09-04 14:23:37,833 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:23:47,345 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-04 14:23:47,345 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 2 registros
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:23:47.346625, rows=2
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:23:47,346 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:23:47,347 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:47,347 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 13:00:00 <= 15:23:47.347835
2025-09-04 14:23:47,348 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 14:00:00 <= 15:23:47.347999
2025-09-04 14:23:47,348 - root - INFO - [ai_service.py:1012] - DEBUG pulando horário passado: 15:00:00 <= 15:23:47.348275
2025-09-04 14:23:47,349 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-04 16:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,349 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:23:47,349 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:23:47,349 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:23:47,350 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-04 14:23:47,351 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:23:47,351 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:23:47,351 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-04 14:23:47,351 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:23:47,351 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:23:47,352 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:47,353 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,354 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,355 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,356 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,356 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-04 14:23:47,356 - root - INFO - [ai_service.py:977] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:23:47,356 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:23:47,357 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-04 14:23:47,357 - root - INFO - [ai_service.py:995] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:23:47,358 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 13:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,359 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 14:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,360 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-11 15:00:00 - Dr. Rafael Elian
2025-09-04 14:23:47,360 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 8
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:1155] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:1156] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:1163] - DEBUG numero_match: 1, indice=0
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:1166] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:23:47,361 - root - INFO - [ai_service.py:740] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-04', 'hora': '16:00', 'data_formatada': '04/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quinta', 'duracao': 30, 'timestamp': 1757001600.0}
2025-09-04 14:23:47,362 - root - INFO - [ai_service.py:741] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:23:58,684 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: Sim
2025-09-04 14:24:32,401 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Avaliação - terapia
2025-09-04 14:24:32,401 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:24:38,061 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 14:24:40,958 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:24:45,611 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 14:24:45,612 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:24:45.613329, rows=1
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:24:45,613 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:24:45,614 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:24:45,614 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:24:45,614 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:24:45,614 - root - INFO - [ai_service.py:995] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:24:45,615 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,616 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,616 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,617 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,618 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,619 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,620 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,620 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:24:45,620 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 14:24:45,620 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:977] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:977] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:977] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:977] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:977] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:24:45,621 - root - INFO - [ai_service.py:995] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:24:45,622 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:45,623 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 8
2025-09-04 14:24:45,623 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 15, 'timestamp': 1757322000.0}
2025-09-04 14:24:56,191 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: NeuroPediatra
2025-09-04 14:24:56,191 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:24:56,191 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 1 registros
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:692] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:967] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:24:56.192183, rows=1
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:977] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:977] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:977] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:977] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:24:56,192 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:24:56,193 - root - INFO - [ai_service.py:977] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:24:56,193 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:24:56,193 - root - INFO - [ai_service.py:995] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:24:56,194 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,194 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,195 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,196 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,197 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,197 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,198 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,198 - root - INFO - [ai_service.py:977] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:24:56,198 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 14:24:56,198 - root - INFO - [ai_service.py:977] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:977] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:977] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:977] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:977] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:981] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:977] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:986] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:24:56,199 - root - INFO - [ai_service.py:995] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:24:56,201 - root - INFO - [ai_service.py:1041] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:24:56,201 - root - INFO - [ai_service.py:1064] - DEBUG total de horários gerados: 8
2025-09-04 14:24:56,201 - root - INFO - [ai_service.py:1065] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 15, 'timestamp': 1757322000.0}
2025-09-04 14:24:56,201 - root - INFO - [ai_service.py:1155] - DEBUG _interpretar_escolha_horario: mensagem='NeuroPediatra'
2025-09-04 14:24:56,201 - root - INFO - [ai_service.py:1156] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:24:56,208 - root - INFO - [ai_service.py:740] - DEBUG _processar_horarios: mensagem='NeuroPediatra', escolha={'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 15, 'timestamp': 1757322000.0}
2025-09-04 14:24:56,208 - root - INFO - [ai_service.py:741] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:28:27,669 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 14:28:27,669 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 14:28:27,669 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:28:43,800 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:28:45,667 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:28:47,141 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:28:47,143 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:28:47,143 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 14:28:47,143 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=1, local_id=1
2025-09-04 14:28:49,161 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Avaliação - terapia
2025-09-04 14:28:49,161 - root - INFO - [ai_service.py:673] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:28:49,162 - root - INFO - [ai_service.py:690] - DEBUG query result: encontrou 0 registros
2025-09-04 14:28:49,162 - root - ERROR - [ai_service.py:695] - ERRO: Nenhum médico/horário encontrado para especialidade_id=1, local_id=1
2025-09-04 14:29:54,752 - app - ERROR - [app.py:875] - Exception on /agendamentos [GET]
Traceback (most recent call last):
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/app.py", line 51, in listar_agendamentos
    return render_template('agendamentos.html', agendamentos=agendamentos, admin=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 150, in render_template
    return _render(app, template, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/flask/templating.py", line 131, in _render
    rv = template.render(context)
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "/home/runner/workspace/templates/agendamentos.html", line 396, in top-level template code
    Criado em {{ agendamento.criado_em.strftime('%d/%m/%Y às %H:%M') }}
    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.11/site-packages/jinja2/utils.py", line 92, in from_obj
    if hasattr(obj, "jinja_pass_arg"):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'str object' has no attribute 'strftime'
2025-09-04 14:31:17,469 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 14:31:17,469 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 14:31:17,469 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:31:23,540 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:31:29,635 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:31:33,292 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:31:50,952 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:33:51,193 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:34:05,013 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:34:25,871 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-04 14:34:25,871 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 14:34:25,871 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:34:32,506 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:34:35,394 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:34:38,819 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:36:36,673 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:36:45,775 - SistemaAgendamento - INFO - [app.py:524] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:37:05,096 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-04 14:37:05,097 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 14:37:05,097 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:37:12,365 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:37:14,027 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:38:33,466 - SistemaAgendamento - INFO - [app.py:555] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:38:52,162 - SistemaAgendamento - INFO - [app.py:555] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:39:17,152 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-04 14:39:17,152 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 14:39:17,152 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:39:23,865 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:39:25,405 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:39:32,787 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 14:39:32,788 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:39:32,788 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:39:32.789240, rows=1
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:39:32,789 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:39:32,790 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:39:32,790 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:39:32,791 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:39:32,793 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,794 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,796 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,797 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,801 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,802 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,804 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,804 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:39:32,804 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 14:39:32,805 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:39:32,805 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 14:39:32,805 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:39:32,805 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:39:32,805 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:39:32,806 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:39:32,806 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:39:32,806 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:39:32,807 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:39:32,807 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:39:32,807 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:39:32,808 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:39:32,808 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:39:32,809 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:39:32,810 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:39:32,810 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 14:40:40,505 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-04 14:40:40,505 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-04 14:40:40,505 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:40:43,606 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:40:46,688 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 14:40:49,117 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:40:49,118 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:40:49,118 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:40:49,118 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:40:49.119083, rows=1
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:40:49,119 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:40:49,120 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:40:49,121 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,123 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,124 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:40:49,126 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:40:49,127 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:40:49,129 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,130 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,132 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,142 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-04 14:40:49,143 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:40:49,143 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:40:50,895 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 14:40:50,895 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:40:50,895 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:40:50,895 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:40:50,895 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:40:50.895924, rows=1
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:40:50,896 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:40:50,897 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:40:50,897 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:40:50,897 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:40:50,898 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,902 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,903 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,903 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:40:50,904 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:40:50,905 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:40:50,905 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:40:50,906 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,906 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,907 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,908 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-04 14:40:50,908 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:40:50,908 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:40:50,908 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 14:40:50,908 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:40:50,909 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 8, indice=7
2025-09-04 14:40:50,909 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '16:00', 'data_formatada': '17/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758124800.0}
2025-09-04 14:40:50,909 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '16:00', 'data_formatada': '17/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758124800.0}
2025-09-04 14:40:50,909 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:40:55,394 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 14:42:49,518 - SistemaAgendamento - INFO - [app.py:555] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:43:00,036 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 14:43:00,036 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 14:43:00,036 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:43:00,722 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 14:43:00,723 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 14:43:00,723 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:43:08,860 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:43:11,197 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 14:43:16,204 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 14:43:16,206 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:43:16,206 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:43:16.207174, rows=1
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:43:16,207 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:43:16,208 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:43:16,208 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:43:16,208 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:43:16,212 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:43:16,213 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,216 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,217 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,218 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,219 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,221 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 14:43:16,222 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:43:16,223 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:43:16,224 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:43:16,224 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:43:16,224 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:43:16,224 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:43:16,225 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:16,226 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:43:16,226 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 14:43:17,879 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 14:43:17,879 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:43:17.880399, rows=1
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:43:17,880 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:43:17,881 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:43:17,882 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,884 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,885 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,886 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,887 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,888 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:43:17,889 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 14:43:17,890 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 14:43:17,891 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 8, indice=7
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '09:00', 'data_formatada': '15/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757926800.0}
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '09:00', 'data_formatada': '15/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757926800.0}
2025-09-04 14:43:17,892 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 14:43:23,041 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 14:45:57,719 - SistemaAgendamento - INFO - [app.py:556] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:48:09,262 - SistemaAgendamento - INFO - [app.py:564] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:48:49,147 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:49:05,217 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 14:50:19,264 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 14:50:19,264 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 14:50:19,264 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:50:27,013 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 14:50:28,906 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 14:50:30,305 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:50:30.310782, rows=1
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:50:30,310 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:50:30,311 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:30,316 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:30,317 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,318 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,319 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:50:30,320 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:30,321 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:50:30,321 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:30,321 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:50:30,321 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:30,321 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:30,322 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,323 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,323 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 14:50:30,324 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:30,325 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:30,326 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:30,327 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:50:30,327 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:50:32,933 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 5
2025-09-04 14:50:32,933 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:50:32,933 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:50:32.934106, rows=1
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:32,934 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:50:32,935 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:32,935 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:50:32,935 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:32,935 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:32,936 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,937 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,938 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,939 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,939 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:50:32,939 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:50:32,940 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:32,942 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:32,944 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,945 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,948 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,948 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 14:50:32,955 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:50:32,956 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 14:50:32,956 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:50:32,956 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 14:50:32,956 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:50:32,956 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:50:32,957 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='5'
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 5, indice=4
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '13:00', 'data_formatada': '17/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758114000.0}
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='5', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '13:00', 'data_formatada': '17/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758114000.0}
2025-09-04 14:50:32,958 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:50:36,399 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 14:50:42,040 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 14:50:48,260 - root - INFO - [ai_service.py:61] - Estado atual: consulta_agendamentos, Mensagem: 11175343676
2025-09-04 14:52:27,963 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 14:52:27,963 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 14:52:27,963 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 14:52:53,970 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11434100685
2025-09-04 14:53:08,114 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Elizabeth Pereira teste
2025-09-04 14:53:21,292 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 10/05/1994
2025-09-04 14:53:21,292 - root - INFO - [ai_service.py:395] - Data armazenada nos dados: 1994-05-10
2025-09-04 14:53:30,596 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31988519422
2025-09-04 14:53:48,108 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: pular
2025-09-04 14:54:14,658 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 34100685
2025-09-04 14:54:38,691 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 14:54:47,746 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Neuropsicóloga
2025-09-04 14:54:47,748 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11434100685', 'etapa_cadastro': 'carteirinha', 'nome': 'Elizabeth Pereira teste', 'data_nascimento': '1994-05-10', 'telefone': '31988519422', 'email': None, 'carteirinha': '34100685', 'tipo_atendimento': 'plano', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:54:47,748 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:54:47,749 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:54:47,749 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:54:47.749361, rows=1
2025-09-04 14:54:47,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:54:47,749 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:54:47,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:54:47,750 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:54:47,751 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:54:47,753 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,754 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,757 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,758 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:54:47,758 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:54:47,759 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:54:47,760 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:54:47,760 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:54:47,760 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:54:47,760 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:54:47,760 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:54:47,761 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 14:54:47,762 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,763 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,763 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:54:47,764 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 14:54:47,765 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:54:47,765 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:54:47,766 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,767 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-04 14:54:47,767 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:54:47,767 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:56:45,426 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 14:56:45,426 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11434100685', 'etapa_cadastro': 'carteirinha', 'nome': 'Elizabeth Pereira teste', 'data_nascimento': '1994-05-10', 'telefone': '31988519422', 'email': None, 'carteirinha': '34100685', 'tipo_atendimento': 'plano', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:56:45,426 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=14:56:45.427242, rows=1
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 14:56:45,427 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:56:45,428 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:56:45,429 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,431 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,432 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:56:45,433 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:56:45,434 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:56:45,435 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 14:56:45,436 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,437 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,437 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 14:56:45,437 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 14:56:45,438 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 14:56:45,439 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 14:56:45,439 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 14:56:45,440 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,441 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-04 14:56:45,441 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 14:56:45,441 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 14:56:45,441 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 14:56:45,441 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 14:56:45,442 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 7, indice=6
2025-09-04 14:56:45,442 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '13:00', 'data_formatada': '24/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758718800.0}
2025-09-04 14:56:45,442 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '13:00', 'data_formatada': '24/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758718800.0}
2025-09-04 14:56:45,442 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11434100685', 'etapa_cadastro': 'carteirinha', 'nome': 'Elizabeth Pereira teste', 'data_nascimento': '1994-05-10', 'telefone': '31988519422', 'email': None, 'carteirinha': '34100685', 'tipo_atendimento': 'plano', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 14:57:11,592 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: Sim
2025-09-04 15:04:50,564 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 15:04:50,564 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 15:04:50,564 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 15:05:08,657 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 15:05:13,846 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 15:05:24,695 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 15:05:24,696 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=15:05:24.697259, rows=1
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 15:05:24,697 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:05:24,698 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 15:05:24,698 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:05:24,698 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:05:24,699 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,699 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,700 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,703 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,704 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,705 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 15:05:24,707 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:05:24,708 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:05:24,709 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-15 09:00:00
2025-09-04 15:05:24,710 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:05:24,710 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 15:05:24,710 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 15:23:42,950 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 15:23:42,951 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 15:23:42,952 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 15:23:48,904 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111.753.436-76
2025-09-04 15:23:53,976 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 15:23:56,990 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 15:23:56,993 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 15:23:56,993 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 15:23:56,993 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 15:23:56,993 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=15:23:56.993892, rows=1
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 15:23:56,994 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:23:56,995 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:23:56,996 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:56,997 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:56,998 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:56,999 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:57,000 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:57,001 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:23:57,002 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:23:57,003 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-15 09:00:00
2025-09-04 15:23:57,004 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:57,004 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 15:23:57,005 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 15:23:59,211 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 15:23:59,212 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 15:23:59,212 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 15:23:59,212 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 15:23:59,212 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=15:23:59.212957, rows=1
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 15:23:59,213 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:23:59,214 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:23:59,215 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,216 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,217 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,221 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,222 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,223 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 15:23:59,224 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 15:23:59,225 - root - INFO - [ai_service.py:1015] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 15:23:59,226 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-15 09:00:00
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-15 10:00:00 - Dr. Avaliação - terapia
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 8, indice=7
2025-09-04 15:23:59,227 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '10:00', 'data_formatada': '15/09/2025', 'hora_formatada': '10:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757930400.0}
2025-09-04 15:23:59,228 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '10:00', 'data_formatada': '15/09/2025', 'hora_formatada': '10:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757930400.0}
2025-09-04 15:23:59,228 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 15:24:03,067 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: Sim
2025-09-04 16:03:16,809 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:07:22,842 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:07:39,710 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:07:50,449 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:08:13,974 - SistemaAgendamento - INFO - [app.py:607] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:09:50,298 - SistemaAgendamento - INFO - [app.py:608] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:09:55,146 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:10:13,808 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:10:28,693 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:11:14,905 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:11:44,988 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 16:11:44,989 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 16:11:44,989 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:12:41,330 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 16:13:20,406 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 16:13:22,747 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 16:13:22,748 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:13:22,748 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:13:22.749210, rows=1
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:22,749 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:13:22,750 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:22,750 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:13:22,750 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:22,750 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:13:22,750 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:22,752 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:22,753 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,755 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,756 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,757 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,757 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:13:22,758 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:22,759 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:13:22,759 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:22,759 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:22,759 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:13:22,763 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,765 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:22,766 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:13:22,767 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:22,768 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:22,768 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:13:22,770 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,776 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:22,783 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 16:13:22,783 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:13:24,900 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 16:13:24,900 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:13:24,900 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 16:13:24,900 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:13:24,900 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:13:24.900901, rows=1
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:13:24,901 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:24,902 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:13:24,902 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:24,902 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:24,903 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,904 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,905 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,906 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,906 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:13:24,906 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:24,906 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:24,907 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:13:24,908 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:24,908 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:24,908 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:13:24,909 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:13:24,911 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:13:24,912 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:13:24,913 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:13:24,913 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:13:24,914 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,915 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:13:24,915 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 16:13:24,915 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:13:24,915 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 16:13:24,915 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 16:13:24,916 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 7, indice=6
2025-09-04 16:13:24,916 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '14:00', 'data_formatada': '24/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758722400.0}
2025-09-04 16:13:24,916 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '14:00', 'data_formatada': '24/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758722400.0}
2025-09-04 16:13:24,916 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:13:28,048 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 16:14:34,047 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 16:14:34,047 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 16:14:34,047 - root - WARNING - [ai_service.py:270] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:14:40,647 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 16:14:43,063 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 16:14:44,188 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 16:14:44,189 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:14:44,189 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 16:14:44,189 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:14:44.190070, rows=1
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:44,190 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:44,191 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:44,192 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,193 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,194 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,195 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:44,196 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:14:44,197 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:44,197 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:14:44,197 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:44,197 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:44,197 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:14:44,198 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,199 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:14:44,200 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:44,201 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:14:44,202 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:44,202 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:14:44,202 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:44,202 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:44,202 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:14:44,206 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:14:44,206 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,207 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:14:44,208 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 16:14:44,208 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:14:46,693 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 6
2025-09-04 16:14:46,693 - root - INFO - [ai_service.py:693] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:710] - DEBUG query result: encontrou 1 registros
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:712] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:987] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:14:46.694374, rows=1
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:997] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:997] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:997] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:997] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:46,694 - root - INFO - [ai_service.py:997] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:997] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:997] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:46,695 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:46,696 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,698 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,698 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,699 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,699 - root - INFO - [ai_service.py:997] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:14:46,699 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:46,699 - root - INFO - [ai_service.py:997] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:14:46,699 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:997] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:997] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:997] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:997] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:997] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:46,700 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:46,701 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:14:46,702 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,703 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,703 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:14:46,703 - root - INFO - [ai_service.py:997] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:14:46,703 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:14:46,703 - root - INFO - [ai_service.py:997] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:997] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:997] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1001] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:997] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:997] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:997] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1006] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:14:46,704 - root - INFO - [ai_service.py:1015] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:14:46,705 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:14:46,705 - root - INFO - [ai_service.py:1063] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:14:46,706 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,707 - root - INFO - [ai_service.py:1061] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:14:46,707 - root - INFO - [ai_service.py:1084] - DEBUG total de horários gerados: 8
2025-09-04 16:14:46,707 - root - INFO - [ai_service.py:1085] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:14:46,707 - root - INFO - [ai_service.py:1175] - DEBUG _interpretar_escolha_horario: mensagem='6'
2025-09-04 16:14:46,707 - root - INFO - [ai_service.py:1176] - DEBUG horarios_disponiveis count: 8
2025-09-04 16:14:46,708 - root - INFO - [ai_service.py:1183] - DEBUG numero_match: 6, indice=5
2025-09-04 16:14:46,708 - root - INFO - [ai_service.py:1186] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '15:00', 'data_formatada': '17/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758121200.0}
2025-09-04 16:14:46,708 - root - INFO - [ai_service.py:760] - DEBUG _processar_horarios: mensagem='6', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '15:00', 'data_formatada': '17/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758121200.0}
2025-09-04 16:14:46,708 - root - INFO - [ai_service.py:761] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:14:50,623 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 16:16:36,301 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:17:07,246 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:17:47,061 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:18:14,447 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:19:33,636 - SistemaAgendamento - INFO - [app.py:612] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:22:33,253 - SistemaAgendamento - INFO - [app.py:616] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:23:13,795 - SistemaAgendamento - INFO - [app.py:616] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:36:21,449 - SistemaAgendamento - INFO - [app.py:618] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:36:27,110 - SistemaAgendamento - INFO - [app.py:629] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:36:35,209 - SistemaAgendamento - INFO - [app.py:653] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:36:55,997 - SistemaAgendamento - INFO - [app.py:653] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:37:30,917 - SistemaAgendamento - INFO - [app.py:659] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:37:36,689 - SistemaAgendamento - INFO - [app.py:659] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:38:14,570 - SistemaAgendamento - INFO - [app.py:659] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:40:20,258 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:40:52,048 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:42:12,200 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:42:28,690 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:44:35,830 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-04 16:44:35,830 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 16:44:35,830 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:44:41,599 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 16:44:44,736 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 16:44:45,855 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 16:44:45,856 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1121] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:44:45.857231, rows=1
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:45,857 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:44:45,858 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:45,858 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:44:45,858 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:45,858 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:44:45,858 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:45,860 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:45,861 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,861 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,863 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,864 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,864 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:44:45,864 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:44:45,865 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:45,866 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:44:45,866 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:45,866 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:45,866 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:44:45,870 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,870 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:44:45,871 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:45,872 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:45,873 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:44:45,873 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:44:45,874 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,875 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,875 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:44:45,875 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:45,875 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:44:45,875 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:44:45,876 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:45,877 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:45,878 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:44:45,878 - root - INFO - [ai_service.py:1218] - DEBUG total de horários gerados: 8
2025-09-04 16:44:45,878 - root - INFO - [ai_service.py:1219] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:44:47,463 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 16:44:47,463 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1121] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:44:47.464287, rows=1
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:47,464 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:47,465 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:47,466 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,466 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,467 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,468 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,468 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:44:47,468 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:47,468 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:47,469 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:47,470 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:44:47,471 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,471 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:47,472 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:44:47,473 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:47,473 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:47,473 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:44:47,473 - root - INFO - [ai_service.py:1197] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:44:47,474 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1135] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:44:47,475 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:44:47,476 - root - INFO - [ai_service.py:1131] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:44:47,476 - root - INFO - [ai_service.py:1140] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:44:47,476 - root - INFO - [ai_service.py:1149] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:44:47,476 - root - INFO - [ai_service.py:1195] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1218] - DEBUG total de horários gerados: 8
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1219] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1309] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1310] - DEBUG horarios_disponiveis count: 8
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1317] - DEBUG numero_match: 8, indice=7
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:1320] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 16:44:47,477 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:46:56,800 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:47:21,950 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:49:47,976 - root - INFO - [ai_service.py:61] - Estado atual: solicitacao_anexo, Mensagem: Oi
2025-09-04 16:49:47,976 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'solicitacao_anexo' para 'inicio'
2025-09-04 16:49:47,976 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:49:53,725 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 16:49:53,725 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 16:49:53,725 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:49:54,307 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 16:49:54,308 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 16:49:54,308 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:50:00,939 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 16:50:08,229 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 16:50:09,404 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 16:50:09,405 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:1141] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:50:09.406612, rows=1
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:09,406 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:50:09,407 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:09,409 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:09,410 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,411 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,412 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:09,414 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:09,415 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:09,416 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:50:09,417 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,417 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:50:09,418 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:50:09,418 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:50:09,419 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:09,420 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:09,422 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:50:09,423 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:50:09,424 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,425 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,425 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:09,426 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:09,428 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:50:09,428 - root - INFO - [ai_service.py:1238] - DEBUG total de horários gerados: 8
2025-09-04 16:50:09,428 - root - INFO - [ai_service.py:1239] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:50:14,296 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 5
2025-09-04 16:50:14,296 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:50:14,296 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1141] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:50:14.297324, rows=1
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:50:14,297 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:14,298 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:14,300 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,301 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,302 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,303 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,303 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:50:14,303 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:14,303 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:50:14,303 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:14,304 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:50:14,305 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:14,305 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:14,305 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:50:14,306 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,307 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:50:14,307 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:50:14,307 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:50:14,307 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:14,308 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:50:14,308 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:14,308 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:50:14,308 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:14,309 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:14,310 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:14,311 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:50:14,312 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:50:14,313 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,315 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,315 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:50:14,315 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:50:14,316 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:50:14,317 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:50:14,318 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:50:14,319 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:50:14,319 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:50:14,319 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:50:14,319 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:50:14,319 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:50:14,322 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:50:14,322 - root - INFO - [ai_service.py:1238] - DEBUG total de horários gerados: 8
2025-09-04 16:50:14,322 - root - INFO - [ai_service.py:1239] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:50:14,322 - root - INFO - [ai_service.py:1329] - DEBUG _interpretar_escolha_horario: mensagem='5'
2025-09-04 16:50:14,322 - root - INFO - [ai_service.py:1330] - DEBUG horarios_disponiveis count: 8
2025-09-04 16:50:14,323 - root - INFO - [ai_service.py:1337] - DEBUG numero_match: 5, indice=4
2025-09-04 16:50:14,323 - root - INFO - [ai_service.py:1340] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '14:00', 'data_formatada': '17/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758117600.0}
2025-09-04 16:50:14,323 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='5', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '14:00', 'data_formatada': '17/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758117600.0}
2025-09-04 16:50:14,323 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:50:14,324 - root - ERROR - [ai_service.py:109] - Erro ao processar mensagem: Registro deve ter ID para ser atualizado
2025-09-04 16:51:02,867 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:51:24,582 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:51:33,648 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:51:58,784 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 16:51:58,785 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 16:51:58,785 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 16:52:04,158 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 16:52:05,883 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 16:52:07,072 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 16:52:07,074 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:52:07,075 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:52:07,075 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:52:07,075 - root - INFO - [ai_service.py:1141] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:52:07.075894, rows=1
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:52:07,076 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:52:07,077 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:07,079 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:07,081 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,082 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,083 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,084 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,084 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:52:07,084 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:07,084 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:52:07,084 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:52:07,085 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:07,086 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:07,086 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:52:07,087 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,088 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:07,089 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:07,090 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:07,091 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:52:07,091 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:52:07,092 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,094 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,094 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:52:07,094 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:52:07,095 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:07,096 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:52:07,096 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:07,096 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:07,097 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:52:07,106 - root - INFO - [ai_service.py:1238] - DEBUG total de horários gerados: 8
2025-09-04 16:52:07,107 - root - INFO - [ai_service.py:1239] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:52:08,846 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 16:52:08,846 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:52:08,846 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1141] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=16:52:08.847172, rows=1
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 16:52:08,847 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:08,848 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 16:52:08,848 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:08,848 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 16:52:08,848 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:08,848 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:08,849 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,850 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,851 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,852 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,852 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 16:52:08,852 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:08,852 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 16:52:08,853 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:08,854 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 16:52:08,854 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:08,854 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:08,854 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 16:52:08,855 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,856 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 16:52:08,856 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:08,857 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 16:52:08,858 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:08,858 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 16:52:08,858 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:08,858 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:08,858 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 16:52:08,859 - root - INFO - [ai_service.py:1217] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 16:52:08,860 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,861 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,861 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 16:52:08,861 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1155] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 16:52:08,862 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 16:52:08,863 - root - INFO - [ai_service.py:1151] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 16:52:08,863 - root - INFO - [ai_service.py:1160] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 16:52:08,863 - root - INFO - [ai_service.py:1169] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 16:52:08,864 - root - INFO - [ai_service.py:1215] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1238] - DEBUG total de horários gerados: 8
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1239] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1329] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1330] - DEBUG horarios_disponiveis count: 8
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1337] - DEBUG numero_match: 8, indice=7
2025-09-04 16:52:08,865 - root - INFO - [ai_service.py:1340] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 16:52:08,866 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 16:52:08,866 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 16:54:35,402 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:56:38,429 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:57:53,692 - SistemaAgendamento - INFO - [app.py:683] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:59:07,012 - SistemaAgendamento - INFO - [app.py:795] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:59:45,962 - SistemaAgendamento - INFO - [app.py:795] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 16:59:54,709 - SistemaAgendamento - INFO - [app.py:795] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:00:06,576 - SistemaAgendamento - INFO - [app.py:795] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:00:17,452 - SistemaAgendamento - INFO - [app.py:802] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:00:49,299 - SistemaAgendamento - INFO - [app.py:838] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:00:59,993 - SistemaAgendamento - INFO - [app.py:840] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:01:16,396 - SistemaAgendamento - INFO - [app.py:840] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:01:32,616 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 17:01:32,617 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 17:01:32,617 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:01:40,023 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:01:41,952 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:01:43,077 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:01:43,079 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:01:43,079 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:01:43,079 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:01:43.080078, rows=1
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:43,080 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:01:43,081 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:43,081 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:01:43,081 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:43,082 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:43,084 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,085 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,087 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:43,088 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:43,089 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:43,090 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:01:43,091 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,095 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:43,096 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:43,097 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:43,098 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:01:43,099 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:01:43,100 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:43,101 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:01:43,102 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:43,103 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:01:43,103 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:43,103 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:43,104 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 17:01:43,105 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:01:43,105 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:01:45,304 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 17:01:45,305 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:01:45.306340, rows=1
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:45,306 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:45,307 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:45,309 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,310 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,311 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:45,313 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:01:45,314 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:45,315 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:45,315 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:01:45,317 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,317 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:01:45,317 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:45,318 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:45,319 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:01:45,320 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:01:45,321 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,322 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,322 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:01:45,323 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:01:45,324 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:01:45,324 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:01:45,325 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 17:01:45,325 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:1335] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:1336] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:1343] - DEBUG numero_match: 7, indice=6
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:1346] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '16:00', 'data_formatada': '24/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758729600.0}
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '16:00', 'data_formatada': '24/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758729600.0}
2025-09-04 17:01:45,326 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:02:04,834 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 14, Arquivo: relatorio_frequencia_01-09-2025_a_04-09-2025.pdf
2025-09-04 17:02:04,894 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 14, Arquivo: relatorio_frequencia_01-09-2025_a_04-09-2025.pdf
2025-09-04 17:02:11,282 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:02:22,179 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Consultar agendamentos
2025-09-04 17:02:27,476 - root - INFO - [ai_service.py:61] - Estado atual: consulta_agendamentos, Mensagem: 11175343676
2025-09-04 17:04:41,286 - SistemaAgendamento - INFO - [app.py:840] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:05:08,390 - SistemaAgendamento - INFO - [app.py:878] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:07:07,194 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: ola
2025-09-04 17:07:07,194 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 17:07:07,194 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:07:30,237 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 111753436776
2025-09-04 17:07:38,555 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:09:05,676 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:09:07,900 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:09:07,901 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:09:07,901 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:09:07.902171, rows=1
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:09:07,902 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:07,903 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:09:07,903 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:07,903 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:09:07,903 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:07,903 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:09:07,904 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:07,905 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:07,907 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,910 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,911 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,915 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,915 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:09:07,915 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:07,915 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:09:07,915 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:09:07,916 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:07,917 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:09:07,917 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:07,917 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:07,917 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:09:07,918 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,919 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:09:07,919 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:09:07,920 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:09:07,921 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:07,922 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:09:07,922 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:07,922 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:07,923 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:09:07,923 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:09:07,924 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:07,925 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:09:07,926 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:07,926 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:09:07,926 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:07,926 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:09:07,926 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:07,927 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:09:07,927 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:07,927 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:09:07,927 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:07,927 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:07,928 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,929 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:07,931 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:09:07,931 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:09:44,345 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 17:09:44,345 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:09:44,345 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:09:44.346251, rows=1
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:09:44,346 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:44,347 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:44,349 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,350 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,351 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,352 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:44,353 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:44,354 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:44,355 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:09:44,356 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,357 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:09:44,357 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:09:44,357 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:09:44,357 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:44,357 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:09:44,358 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:44,359 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:44,359 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:09:44,359 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:09:44,360 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,361 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:09:44,361 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:09:44,361 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:09:44,361 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:09:44,361 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:09:44,362 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:09:44,363 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:09:44,364 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 13:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,364 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1335] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1336] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1343] - DEBUG numero_match: 7, indice=6
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:1346] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 17:09:44,365 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '13:00', 'data_formatada': '01/10/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759323600.0}
2025-09-04 17:09:44,368 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:10:13,330 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 16, Arquivo: cap.png
2025-09-04 17:10:13,582 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 16, Arquivo: cap.png
2025-09-04 17:10:19,673 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:12:59,925 - SistemaAgendamento - INFO - [app.py:878] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:13:01,683 - SistemaAgendamento - INFO - [app.py:878] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:13:18,882 - SistemaAgendamento - INFO - [app.py:878] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:14:41,312 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: ola
2025-09-04 17:14:41,312 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 17:14:41,313 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:14:47,775 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:14:49,332 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:14:50,654 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:14:50,655 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:14:50.656301, rows=1
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:50,656 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:14:50,657 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:50,659 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:50,660 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,662 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,663 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,665 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,665 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:14:50,665 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:50,665 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:14:50,666 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:50,666 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:14:50,666 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:50,666 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:14:50,666 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:50,667 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:50,668 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:14:50,669 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,669 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:14:50,670 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:14:50,671 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:50,672 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:50,672 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:14:50,673 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:14:50,679 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,680 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:14:50,680 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:14:50,680 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:50,680 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:50,681 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:14:50,682 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:50,682 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:50,682 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:14:50,683 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,695 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:50,696 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:14:50,696 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:14:51,995 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 17:14:51,996 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:14:51,996 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:14:51,996 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:14:51,996 - root - INFO - [ai_service.py:1147] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:14:51.996797, rows=1
2025-09-04 17:14:51,996 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:51,997 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:51,998 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:14:51,999 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,005 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,006 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,006 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:14:52,006 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:52,006 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:14:52,006 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:52,007 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:14:52,012 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:52,012 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:52,012 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:14:52,013 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,013 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:14:52,016 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:14:52,017 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:14:52,017 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:52,017 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:14:52,018 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:52,018 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:52,019 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:52,020 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:14:52,020 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:14:52,021 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,021 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:14:52,022 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:14:52,025 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:14:52,025 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:14:52,025 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:14:52,025 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1161] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1157] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1166] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:14:52,026 - root - INFO - [ai_service.py:1175] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:14:52,027 - root - INFO - [ai_service.py:1223] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:14:52,031 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,033 - root - INFO - [ai_service.py:1221] - DEBUG adicionado horário: 2025-10-01 15:00:00 - Dr. Rafael Elian
2025-09-04 17:14:52,033 - root - INFO - [ai_service.py:1244] - DEBUG total de horários gerados: 8
2025-09-04 17:14:52,033 - root - INFO - [ai_service.py:1245] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:14:52,033 - root - INFO - [ai_service.py:1335] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 17:14:52,033 - root - INFO - [ai_service.py:1336] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:14:52,034 - root - INFO - [ai_service.py:1343] - DEBUG numero_match: 7, indice=6
2025-09-04 17:14:52,034 - root - INFO - [ai_service.py:1346] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '14:00', 'data_formatada': '01/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759327200.0}
2025-09-04 17:14:52,035 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '14:00', 'data_formatada': '01/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759327200.0}
2025-09-04 17:14:52,035 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:18:00,838 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:18:15,830 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:18:28,137 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:19:14,347 - root - INFO - [ai_service.py:61] - Estado atual: solicitacao_anexo, Mensagem: ola
2025-09-04 17:19:14,348 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'solicitacao_anexo' para 'inicio'
2025-09-04 17:19:14,348 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:19:19,259 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:19:21,731 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:19:23,044 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:19:23,045 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:19:23.046566, rows=1
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,046 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:19:23,047 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,049 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,051 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,052 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,054 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,056 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,057 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,058 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:19:23,059 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,060 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:19:23,060 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:19:23,061 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:19:23,062 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:19:23,062 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,062 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,063 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:19:23,063 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:19:23,068 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,069 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:19:23,069 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:19:23,069 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,069 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,070 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:19:23,071 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,071 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,071 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:19:23,072 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,074 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,074 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:19:23,074 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:19:23,955 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 17:19:23,956 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:19:23,956 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:19:23,956 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:19:23.957045, rows=1
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:19:23,957 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,958 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:19:23,958 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,958 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,959 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,960 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,961 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,962 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,962 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:19:23,962 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:19:23,963 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,964 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,964 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:19:23,965 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,965 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,966 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,967 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:19:23,968 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:19:23,969 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,969 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:19:23,969 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:19:23,969 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:19:23,969 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:19:23,970 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:19:23,971 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:19:23,971 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:19:23,972 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,973 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 15:00:00 - Dr. Rafael Elian
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 8, indice=7
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '15:00', 'data_formatada': '01/10/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759330800.0}
2025-09-04 17:19:23,974 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '15:00', 'data_formatada': '01/10/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759330800.0}
2025-09-04 17:19:23,975 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:19:32,343 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 19, Arquivo: Captura_de_Tela_1.png
2025-09-04 17:19:38,062 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:21:27,981 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:21:30,003 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:21:36,133 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:21:37,866 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:21:55,261 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:22:09,832 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 17:22:09,832 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 17:22:09,832 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:22:46,874 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:22:53,136 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:22:54,448 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:22:54,449 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:22:54,450 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:22:54,450 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:22:54,450 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:22:54.450727, rows=1
2025-09-04 17:22:54,450 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:22:54,450 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:22:54,451 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:22:54,452 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:22:54,452 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:22:54,454 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:22:54,455 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,456 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,457 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:22:54,459 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:22:54,460 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:22:54,461 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:22:54,462 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,462 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:22:54,463 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:22:54,463 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:22:54,463 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:22:54,463 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:22:54,464 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:22:54,465 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:22:54,470 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:22:54,471 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,471 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:22:54,472 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:22:54,473 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:22:54,473 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:22:54,473 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:22:54,473 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:22:54,473 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:22:54,475 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,475 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:22:54,477 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 16:00:00 - Dr. Rafael Elian
2025-09-04 17:22:54,477 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:22:54,477 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:23:04,003 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 17:23:04,003 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:23:04,004 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:23:04,004 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:23:04,004 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:23:04.004573, rows=1
2025-09-04 17:23:04,004 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:23:04,004 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:23:04,005 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:23:04,006 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:23:04,006 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:23:04,007 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,008 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,009 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:23:04,010 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:23:04,011 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:23:04,012 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:23:04,013 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,013 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:23:04,014 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:23:04,015 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:23:04,016 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:23:04,017 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,017 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:23:04,018 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:23:04,019 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:23:04,019 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:23:04,019 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:23:04,019 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:23:04,019 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:23:04,020 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,020 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:23:04,021 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 16:00:00 - Dr. Rafael Elian
2025-09-04 17:23:04,021 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 8, indice=7
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '16:00', 'data_formatada': '01/10/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759334400.0}
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '16:00', 'data_formatada': '01/10/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759334400.0}
2025-09-04 17:23:04,022 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:23:34,686 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 21, Arquivo: 480538.png
2025-09-04 17:23:39,521 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:24:58,263 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:25:00,157 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:25:05,169 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:25:09,120 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 21
2025-09-04 17:25:09,122 - SistemaAgendamento - INFO - [app.py:1532] - Verificando arquivo: uploads/anexos/21_1bc87536_480538.png
2025-09-04 17:25:16,871 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 99
2025-09-04 17:25:16,872 - SistemaAgendamento - ERROR - [app.py:1518] - Agendamento 99 não encontrado
2025-09-04 17:25:43,558 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:25:47,818 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 22
2025-09-04 17:25:47,819 - SistemaAgendamento - INFO - [app.py:1532] - Verificando arquivo: uploads/anexos/21_1bc87536_480538.png
2025-09-04 17:26:03,326 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:27:38,495 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:31:10,687 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 17:31:10,687 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 17:31:10,687 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:31:17,360 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 17:31:19,426 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:31:20,716 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:31:20,717 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:31:20,717 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:31:20,717 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:31:20.717998, rows=1
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:20,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:31:20,719 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:20,722 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:20,724 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,725 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,726 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,727 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,727 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:31:20,727 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:20,727 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:31:20,727 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:20,728 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:20,729 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:31:20,731 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,731 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:31:20,732 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:31:20,732 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:31:20,732 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:20,732 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:31:20,732 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:20,733 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:20,734 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:31:20,735 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:31:20,736 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:31:20,737 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:20,738 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:20,739 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:31:20,743 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,744 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:31:20,744 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 17:31:20,744 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 17:31:20,745 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:20,746 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 17:31:20,746 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:20,746 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:20,747 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 17:31:20,747 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:31:20,747 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:31:25,790 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 17:31:25,790 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:31:25.791540, rows=1
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:31:25,791 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:25,792 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:25,793 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,794 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,795 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:25,796 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:25,797 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:25,798 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:31:25,799 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,799 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:31:25,799 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:31:25,800 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:25,801 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:31:25,801 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:25,801 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:25,801 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:31:25,802 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:31:25,803 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:25,804 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:25,805 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:31:25,806 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-01 14:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,806 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:31:25,806 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 17:31:25,806 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 17:31:25,807 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:31:25,808 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:31:25,808 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 7, indice=6
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '14:00', 'data_formatada': '01/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759327200.0}
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-01', 'hora': '14:00', 'data_formatada': '01/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759327200.0}
2025-09-04 17:31:25,809 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:31:47,449 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 23, Arquivo: cap.png
2025-09-04 17:31:50,497 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:33:02,384 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 22
2025-09-04 17:33:02,386 - SistemaAgendamento - INFO - [app.py:1532] - Verificando arquivo: uploads/anexos/21_1bc87536_480538.png
2025-09-04 17:34:24,778 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 22
2025-09-04 17:34:24,779 - SistemaAgendamento - INFO - [app.py:1532] - Verificando arquivo: uploads/anexos/21_1bc87536_480538.png
2025-09-04 17:35:43,442 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:40:46,185 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:41:30,902 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:48:18,266 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:50:34,995 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:53:11,658 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:54:01,739 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 17:55:42,034 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-04 17:55:42,035 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 17:55:42,035 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:55:58,481 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 34553131478
2025-09-04 17:56:12,560 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: elizabeth pereira souza
2025-09-04 17:56:26,144 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 15 03 1990
2025-09-04 17:56:38,040 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 10/04/1990
2025-09-04 17:56:38,040 - root - INFO - [ai_service.py:397] - Data armazenada nos dados: 1990-04-10
2025-09-04 17:56:49,375 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 37988519455
2025-09-04 17:56:59,450 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: souza@gmail.com
2025-09-04 17:57:09,097 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 4876rp
2025-09-04 17:57:12,370 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 17:57:18,728 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 17:57:18,729 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '34553131478', 'etapa_cadastro': 'carteirinha', 'nome': 'elizabeth pereira souza', 'data_nascimento': '1990-04-10', 'telefone': '37988519455', 'email': 'souza@gmail.com', 'carteirinha': '4876rp', 'tipo_atendimento': 'plano', 'paciente_id': 4, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 17:57:18,729 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:57:18,729 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:57:18.730006, rows=1
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:57:18,730 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:57:18,731 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 17:57:18,731 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 17:57:18,732 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,733 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,735 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,737 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,738 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,739 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,740 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:57:18,741 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:57:18,742 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:57:18,742 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:57:18,742 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:57:18,742 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 17:57:18,742 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 17:57:18,743 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:18,744 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:57:18,744 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 17:57:31,048 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 6
2025-09-04 17:57:31,048 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '34553131478', 'etapa_cadastro': 'carteirinha', 'nome': 'elizabeth pereira souza', 'data_nascimento': '1990-04-10', 'telefone': '37988519455', 'email': 'souza@gmail.com', 'carteirinha': '4876rp', 'tipo_atendimento': 'plano', 'paciente_id': 4, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:57:31.049459, rows=1
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:57:31,049 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:57:31,050 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:57:31,050 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:57:31,050 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:57:31,050 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 17:57:31,050 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 17:57:31,051 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,052 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,057 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,058 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,059 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,060 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,061 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 17:57:31,062 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:57:31,063 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 17:57:31,064 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 17:57:31,065 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 17:57:31,065 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:57:31,065 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 17:57:31,065 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='6'
2025-09-04 17:57:31,065 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:57:31,066 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 6, indice=5
2025-09-04 17:57:31,066 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '15:00', 'data_formatada': '08/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757343600.0}
2025-09-04 17:57:31,066 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='6', escolha={'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '15:00', 'data_formatada': '08/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757343600.0}
2025-09-04 17:57:31,066 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '34553131478', 'etapa_cadastro': 'carteirinha', 'nome': 'elizabeth pereira souza', 'data_nascimento': '1990-04-10', 'telefone': '37988519455', 'email': 'souza@gmail.com', 'carteirinha': '4876rp', 'tipo_atendimento': 'plano', 'paciente_id': 4, 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 17:57:38,595 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 17:57:43,190 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: oi
2025-09-04 17:57:43,190 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 17:57:43,190 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 17:58:01,264 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11434100685
2025-09-04 17:58:05,682 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 17:58:09,576 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 17:58:09,577 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11434100685', 'paciente_id': 3, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:58:09.578352, rows=1
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:09,578 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:09,579 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:09,580 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,581 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,583 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:58:09,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:09,585 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:58:09,587 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,587 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:58:09,588 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:09,589 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:09,590 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:58:09,590 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:58:09,591 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:09,592 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:09,593 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:09,594 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:58:09,594 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 17:58:09,595 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 17:58:09,596 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:09,597 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 17:58:09,597 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:09,597 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 17:58:09,597 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:09,597 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:09,602 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,603 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:09,603 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:58:09,604 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:58:19,486 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 5
2025-09-04 17:58:19,487 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11434100685', 'paciente_id': 3, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 17:58:19,487 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 17:58:19,487 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=17:58:19.488128, rows=1
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 17:58:19,488 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:19,489 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:19,494 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,495 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,496 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,500 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,500 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 17:58:19,500 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:19,500 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 17:58:19,500 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:19,501 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 17:58:19,502 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:19,502 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 17:58:19,502 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:19,502 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:19,502 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 17:58:19,503 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:19,504 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:19,505 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:19,506 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 17:58:19,506 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 17:58:19,507 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,507 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 17:58:19,507 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 17:58:19,507 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:19,508 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:19,509 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 17:58:19,509 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 17:58:19,510 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 17:58:19,511 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 17:58:19,511 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 17:58:19,511 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 17:58:19,511 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 17:58:19,511 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 17:58:19,512 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 17:58:19,512 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 17:58:19,512 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 17:58:19,512 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 17:58:19,512 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 17:58:19,513 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 17:58:19,514 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 17:58:19,514 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 17:58:19,514 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 17:58:19,514 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 17:58:19,514 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 17:58:19,515 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,517 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 17:58:19,517 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='5'
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 5, indice=4
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '14:00', 'data_formatada': '17/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758117600.0}
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='5', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '14:00', 'data_formatada': '17/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1758117600.0}
2025-09-04 17:58:19,518 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11434100685', 'paciente_id': 3, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:00:28,515 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:01:02,602 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:01:59,833 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:02:37,067 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:02:51,416 - SistemaAgendamento - INFO - [app.py:879] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:03:33,417 - SistemaAgendamento - INFO - [app.py:323] - Arquivo anexado via chat - Agendamento: 26, Arquivo: 23096854-b8a1-4eb0-b492-5a6075b3c665.signstamp.pdf
2025-09-04 18:03:51,520 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 18:07:29,240 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 18:07:29,240 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 18:07:29,240 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:07:36,589 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 18:18:36,695 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 18:18:41,705 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 18:18:41,707 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:18:41,708 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:18:41,708 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:18:41.709181, rows=1
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:41,709 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:18:41,710 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:41,712 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:41,713 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,714 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,715 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,715 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:41,716 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:41,717 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 18:18:41,717 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 14:00:00
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:41,718 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:41,719 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:41,720 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 18:18:41,720 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 18:18:41,721 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:41,722 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:41,723 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 18:18:41,723 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 18:18:41,724 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 18:18:41,724 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 18:18:41,724 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 18:18:41,724 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 18:18:41,725 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:41,726 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 18:18:41,726 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:41,726 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:41,727 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,728 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,729 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:41,733 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:18:41,733 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 18:18:44,574 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 18:18:44,574 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:18:44,574 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:18:44.575221, rows=1
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:44,575 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:44,576 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:44,577 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,578 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,579 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,580 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,580 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:18:44,580 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 18:18:44,581 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:44,582 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:44,582 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 18:18:44,583 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 14:00:00
2025-09-04 18:18:44,583 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 18:18:44,583 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:44,584 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:44,585 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 18:18:44,585 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 18:18:44,586 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,587 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 18:18:44,587 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 18:18:44,587 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:44,587 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 18:18:44,587 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 18:18:44,588 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:44,589 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:44,589 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 18:18:44,589 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 18:18:44,590 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 18:18:44,590 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 18:18:44,590 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 18:18:44,590 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:18:44,590 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:18:44,591 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:18:44,592 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,593 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,594 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 15:00:00 - Dr. Rafael Elian
2025-09-04 18:18:44,594 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 7, indice=6
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-08', 'hora': '14:00', 'data_formatada': '08/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759932000.0}
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-08', 'hora': '14:00', 'data_formatada': '08/10/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759932000.0}
2025-09-04 18:18:44,595 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:19:12,371 - SistemaAgendamento - INFO - [app.py:1514] - Tentativa de download - Agendamento ID: 22
2025-09-04 18:19:12,371 - SistemaAgendamento - INFO - [app.py:1532] - Verificando arquivo: uploads/anexos/21_1bc87536_480538.png
2025-09-04 18:19:26,858 - root - INFO - [ai_service.py:61] - Estado atual: solicitacao_anexo, Mensagem: Oi
2025-09-04 18:19:26,858 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'solicitacao_anexo' para 'inicio'
2025-09-04 18:19:26,859 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:20:14,125 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: ola
2025-09-04 18:20:14,125 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 18:20:14,125 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:20:29,393 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 18:21:47,257 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 18:21:50,841 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - terapia
2025-09-04 18:21:50,842 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:21:50.843520, rows=1
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:21:50,843 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 18:21:50,844 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 18:21:50,845 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,847 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,848 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,849 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,850 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,850 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-08 15:00:00
2025-09-04 18:21:50,851 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,851 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:21:50,851 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 18:21:50,851 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:21:50,851 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 18:21:50,852 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 18:21:50,854 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,854 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-15 10:00:00
2025-09-04 18:21:50,855 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 11:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:50,856 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:21:50,856 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 18:21:54,808 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-04 18:21:54,808 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Avaliação - terapia', 'crm': '12345-SP', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 14:04:14', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '09:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:21:54.809604, rows=1
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:21:54,809 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:21:54,810 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:21:54,810 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:21:54,810 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:21:54,810 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 18:21:54,810 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 18:21:54,811 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,816 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,817 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,818 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,818 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,819 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-08 15:00:00
2025-09-04 18:21:54,820 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,820 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:21:54,820 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=1
2025-09-04 18:21:54,820 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:21:54,820 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=2
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=3
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=4
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:21:54,821 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:21:54,822 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:21:54,822 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Avaliação - terapia, dia_semana_medico=0, dia_semana_atual=0
2025-09-04 18:21:54,822 - root - INFO - [ai_service.py:1176] - DEBUG médico Avaliação - terapia trabalha de 09:00:00 às 17:00:00
2025-09-04 18:21:54,823 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 09:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,823 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-15 10:00:00
2025-09-04 18:21:54,824 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-15 11:00:00 - Dr. Avaliação - terapia
2025-09-04 18:21:54,824 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:21:54,824 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '09:00', 'data_formatada': '08/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757322000.0}
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 7, indice=6
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '09:00', 'data_formatada': '15/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757926800.0}
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 2, 'medico_nome': 'Avaliação - terapia', 'medico': 'Avaliação - terapia', 'especialidade': 'Avaliação - terapia', 'crm': '12345-SP', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-15', 'hora': '09:00', 'data_formatada': '15/09/2025', 'hora_formatada': '09:00', 'dia_semana': 'Segunda', 'duracao': 30, 'timestamp': 1757926800.0}
2025-09-04 18:21:54,825 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - terapia'}
2025-09-04 18:22:01,150 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 18:25:49,987 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:26:18,004 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:32:03,289 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 18:32:03,289 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 18:32:03,289 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:35:13,025 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-04 18:52:18,818 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-04 18:52:18,818 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-04 18:52:18,819 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:52:27,564 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 18:52:33,692 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 18:52:36,166 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Belo Horizonte
2025-09-04 18:52:40,423 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-04 18:52:40,423 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 18:52:40,423 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 18:52:49,049 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 18:52:52,088 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-04 18:52:55,092 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-04 18:52:55,094 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:52:55,094 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:52:55,094 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:52:55.095128, rows=1
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:55,095 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:52:55,096 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:55,096 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:52:55,096 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:55,096 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:52:55,096 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:55,101 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:55,102 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,103 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,104 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,105 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,105 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:52:55,105 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:52:55,106 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:55,107 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 18:52:55,108 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 14:00:00
2025-09-04 18:52:55,108 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 18:52:55,109 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:55,110 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:55,111 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 18:52:55,111 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 18:52:55,112 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:55,113 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:55,114 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:55,115 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 18:52:55,115 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 18:52:55,116 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 18:52:55,116 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 18:52:55,116 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 18:52:55,117 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:55,118 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 18:52:55,118 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:55,118 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:55,119 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,120 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,121 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:55,121 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:52:55,122 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 18:52:57,767 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-04 18:52:57,768 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 18:52:57,768 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-04 18:52:57,768 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM22', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-04 13:22:59', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 30}
2025-09-04 18:52:57,768 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-04, hora_atual=18:52:57.768846, rows=1
2025-09-04 18:52:57,768 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-04, dia_semana=3
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-05, dia_semana=4
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-06, dia_semana=5
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-07, dia_semana=6
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 4: data=2025-09-08, dia_semana=0
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:57,769 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 5: data=2025-09-09, dia_semana=1
2025-09-04 18:52:57,770 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:57,770 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 6: data=2025-09-10, dia_semana=2
2025-09-04 18:52:57,770 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:57,770 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:57,771 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 13:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,772 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 14:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,773 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,774 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,774 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 7: data=2025-09-11, dia_semana=3
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 8: data=2025-09-12, dia_semana=4
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 9: data=2025-09-13, dia_semana=5
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 10: data=2025-09-14, dia_semana=6
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 11: data=2025-09-15, dia_semana=0
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 12: data=2025-09-16, dia_semana=1
2025-09-04 18:52:57,775 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:57,776 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 13: data=2025-09-17, dia_semana=2
2025-09-04 18:52:57,776 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:57,776 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:57,776 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 13:00:00
2025-09-04 18:52:57,777 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 14:00:00
2025-09-04 18:52:57,777 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 15:00:00
2025-09-04 18:52:57,777 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-17 16:00:00
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 14: data=2025-09-18, dia_semana=3
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 15: data=2025-09-19, dia_semana=4
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 16: data=2025-09-20, dia_semana=5
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 17: data=2025-09-21, dia_semana=6
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:57,778 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 18: data=2025-09-22, dia_semana=0
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 19: data=2025-09-23, dia_semana=1
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 20: data=2025-09-24, dia_semana=2
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:57,779 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 13:00:00
2025-09-04 18:52:57,780 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 14:00:00
2025-09-04 18:52:57,781 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-09-24 16:00:00
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 21: data=2025-09-25, dia_semana=3
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 22: data=2025-09-26, dia_semana=4
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 23: data=2025-09-27, dia_semana=5
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:57,782 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 24: data=2025-09-28, dia_semana=6
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 25: data=2025-09-29, dia_semana=0
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 26: data=2025-09-30, dia_semana=1
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 27: data=2025-10-01, dia_semana=2
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:57,783 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:57,784 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 13:00:00
2025-09-04 18:52:57,784 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 14:00:00
2025-09-04 18:52:57,788 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 15:00:00
2025-09-04 18:52:57,789 - root - INFO - [ai_service.py:1224] - DEBUG horário ocupado: 2025-10-01 16:00:00
2025-09-04 18:52:57,789 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 28: data=2025-10-02, dia_semana=3
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 29: data=2025-10-03, dia_semana=4
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 30: data=2025-10-04, dia_semana=5
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 31: data=2025-10-05, dia_semana=6
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-04 18:52:57,790 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 32: data=2025-10-06, dia_semana=0
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 33: data=2025-10-07, dia_semana=1
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 34: data=2025-10-08, dia_semana=2
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-04 18:52:57,791 - root - INFO - [ai_service.py:1176] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-04 18:52:57,792 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 13:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,794 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 14:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,795 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-10-08 15:00:00 - Dr. Rafael Elian
2025-09-04 18:52:57,795 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-04 18:52:57,795 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '13:00', 'data_formatada': '10/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1757509200.0}
2025-09-04 18:52:57,795 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-04 18:52:57,795 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-04 18:52:57,796 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 8, indice=7
2025-09-04 18:52:57,796 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-08', 'hora': '15:00', 'data_formatada': '08/10/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759935600.0}
2025-09-04 18:52:57,796 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM22', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-10-08', 'hora': '15:00', 'data_formatada': '08/10/2025', 'hora_formatada': '15:00', 'dia_semana': 'Quarta', 'duracao': 30, 'timestamp': 1759935600.0}
2025-09-04 18:52:57,796 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-04 19:14:46,266 - SistemaAgendamento - INFO - [app.py:331] - Arquivo anexado via chat - Agendamento: 30, Arquivo: cap.png
2025-09-04 19:14:56,381 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-04 19:16:53,111 - root - INFO - [app.py:1367] - Banco de dados zerado pelo admin. 2 locais mantidos.
2025-09-04 19:17:49,800 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 19:17:49,800 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 19:17:49,800 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 19:18:10,551 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-04 19:19:13,952 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: João layon Antunes dos anjos
2025-09-04 19:19:38,003 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-04 19:19:38,004 - root - INFO - [ai_service.py:397] - Data armazenada nos dados: 2001-01-22
2025-09-04 19:19:45,398 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31975317444
2025-09-04 19:20:16,322 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Pular
2025-09-04 19:20:36,673 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 354866888
2025-09-04 19:20:47,456 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-04 19:20:52,721 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Belo Horizonte
2025-09-04 19:26:39,704 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Ola
2025-09-04 19:26:39,704 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-04 19:26:39,704 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 19:27:29,589 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-04 19:27:29,589 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-04 19:27:29,589 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-04 19:30:30,973 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: Oi
2025-09-04 19:30:30,974 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-04 19:30:30,974 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-05 14:56:53,843 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-05 16:16:05,014 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-05 16:35:19,011 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-05 16:35:19,012 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-05 16:35:19,012 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-05 16:35:25,016 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-05 16:35:28,420 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-05 16:35:32,361 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - Terapias
2025-09-05 16:35:32,363 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-05, hora_atual=16:35:32.364598, rows=1
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-05, dia_semana=4
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=4
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-06, dia_semana=5
2025-09-05 16:35:32,364 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-05 16:35:32,365 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-07, dia_semana=6
2025-09-05 16:35:32,365 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-05 16:35:32,365 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-08, dia_semana=0
2025-09-05 16:35:32,365 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=0
2025-09-05 16:35:32,367 - root - INFO - [ai_service.py:1176] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-05 16:35:32,368 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,369 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,370 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,371 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,372 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,375 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,377 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,378 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 16:35:32,378 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-05 16:35:32,378 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '08:00', 'data_formatada': '08/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Segunda', 'duracao': 45, 'timestamp': 1757318400.0}
2025-09-05 19:18:08,154 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-05 19:18:50,675 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: ola
2025-09-05 19:18:50,675 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-05 19:18:50,675 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-05 19:18:56,581 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-05 19:19:25,785 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-05 19:19:32,713 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - Terapias
2025-09-05 19:19:32,715 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-05 19:19:32,715 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-05 19:19:32,715 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-05 19:19:32,715 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-05, hora_atual=19:19:32.715969, rows=1
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-05, dia_semana=4
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=4
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-06, dia_semana=5
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-07, dia_semana=6
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-08, dia_semana=0
2025-09-05 19:19:32,716 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=0
2025-09-05 19:19:32,720 - root - INFO - [ai_service.py:1176] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-05 19:19:32,722 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,723 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,725 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,726 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,727 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,729 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,730 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,731 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:32,732 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-05 19:19:32,732 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '08:00', 'data_formatada': '08/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Segunda', 'duracao': 45, 'timestamp': 1757318400.0}
2025-09-05 19:19:40,444 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-05 19:19:40,444 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=1, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-05 19:19:40,447 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-05 19:19:40,447 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 1, 'dia_semana': 0, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-05, hora_atual=19:19:40.448035, rows=1
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-05, dia_semana=4
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=4
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-06, dia_semana=5
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-07, dia_semana=6
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-08, dia_semana=0
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=0, dia_semana_atual=0
2025-09-05 19:19:40,448 - root - INFO - [ai_service.py:1176] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-05 19:19:40,449 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,450 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,451 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,452 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,453 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,454 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,454 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,455 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-08 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '08:00', 'data_formatada': '08/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Segunda', 'duracao': 45, 'timestamp': 1757318400.0}
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 1, indice=0
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '08:00', 'data_formatada': '08/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Segunda', 'duracao': 45, 'timestamp': 1757318400.0}
2025-09-05 19:19:40,456 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-09-08', 'hora': '08:00', 'data_formatada': '08/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Segunda', 'duracao': 45, 'timestamp': 1757318400.0}
2025-09-05 19:19:40,457 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-05 19:20:11,507 - SistemaAgendamento - INFO - [app.py:331] - Arquivo anexado via chat - Agendamento: 1, Arquivo: Captura_de_tela_2025-09-05_160654.png
2025-09-05 19:20:23,002 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-05 19:21:17,677 - SistemaAgendamento - INFO - [app.py:1522] - Tentativa de download - Agendamento ID: 1
2025-09-05 19:21:17,678 - SistemaAgendamento - INFO - [app.py:1540] - Verificando arquivo: uploads/anexos/1_9b4537d5_Captura_de_tela_2025-09-05_160654.png
2025-09-05 19:21:29,400 - SistemaAgendamento - INFO - [app.py:1522] - Tentativa de download - Agendamento ID: 2
2025-09-05 19:21:29,401 - SistemaAgendamento - INFO - [app.py:1540] - Verificando arquivo: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-05 19:21:29,401 - SistemaAgendamento - ERROR - [app.py:1543] - Arquivo não existe: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-05 19:21:37,325 - SistemaAgendamento - INFO - [app.py:1522] - Tentativa de download - Agendamento ID: 2
2025-09-05 19:21:37,326 - SistemaAgendamento - INFO - [app.py:1540] - Verificando arquivo: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-05 19:21:37,327 - SistemaAgendamento - ERROR - [app.py:1543] - Arquivo não existe: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-06 02:33:54,243 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 02:36:53,086 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-06 02:36:53,086 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-06 02:36:53,086 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-06 02:36:59,386 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-06 02:37:01,370 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-06 02:37:02,943 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - Terapias
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 2, 'dia_semana': 1, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-06, hora_atual=02:37:02.944808, rows=1
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-06, dia_semana=5
2025-09-06 02:37:02,944 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-07, dia_semana=6
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-08, dia_semana=0
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=0
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-09, dia_semana=1
2025-09-06 02:37:02,945 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=1
2025-09-06 02:37:02,946 - root - INFO - [ai_service.py:1176] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-06 02:37:02,947 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,948 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,949 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,951 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,952 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,953 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,954 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,956 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:02,956 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-06 02:37:02,956 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-09', 'hora': '08:00', 'data_formatada': '09/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1757404800.0}
2025-09-06 02:37:06,102 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 7
2025-09-06 02:37:06,102 - root - INFO - [ai_service.py:695] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:712] - DEBUG query result: encontrou 1 registros
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:714] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 2, 'dia_semana': 1, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:1148] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-06, hora_atual=02:37:06.103555, rows=1
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 0: data=2025-09-06, dia_semana=5
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=5
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 1: data=2025-09-07, dia_semana=6
2025-09-06 02:37:06,103 - root - INFO - [ai_service.py:1162] - DEBUG pulando fim de semana: dia_semana=6
2025-09-06 02:37:06,104 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 2: data=2025-09-08, dia_semana=0
2025-09-06 02:37:06,104 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=0
2025-09-06 02:37:06,104 - root - INFO - [ai_service.py:1158] - DEBUG processando dia 3: data=2025-09-09, dia_semana=1
2025-09-06 02:37:06,104 - root - INFO - [ai_service.py:1167] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=1
2025-09-06 02:37:06,104 - root - INFO - [ai_service.py:1176] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-06 02:37:06,105 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,107 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,111 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,112 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,113 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,114 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,115 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1222] - DEBUG adicionado horário: 2025-09-09 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1245] - DEBUG total de horários gerados: 8
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1246] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-09', 'hora': '08:00', 'data_formatada': '09/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1757404800.0}
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1336] - DEBUG _interpretar_escolha_horario: mensagem='7'
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1337] - DEBUG horarios_disponiveis count: 8
2025-09-06 02:37:06,117 - root - INFO - [ai_service.py:1344] - DEBUG numero_match: 7, indice=6
2025-09-06 02:37:06,118 - root - INFO - [ai_service.py:1347] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-09', 'hora': '15:00', 'data_formatada': '09/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1757430000.0}
2025-09-06 02:37:06,118 - root - INFO - [ai_service.py:762] - DEBUG _processar_horarios: mensagem='7', escolha={'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-09', 'hora': '15:00', 'data_formatada': '09/09/2025', 'hora_formatada': '15:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1757430000.0}
2025-09-06 02:37:06,118 - root - INFO - [ai_service.py:763] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-06 02:37:19,656 - SistemaAgendamento - INFO - [app.py:331] - Arquivo anexado via chat - Agendamento: 3, Arquivo: Captura_de_tela_2025-09-05_160654.png
2025-09-06 02:37:23,065 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-06 03:12:53,239 - SistemaAgendamento - INFO - [app.py:887] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:15:14,454 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:16:26,974 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:17:08,424 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:17:53,315 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-06 03:17:53,315 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-06 03:17:53,316 - root - WARNING - [ai_service.py:272] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-06 03:18:52,475 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:18:56,188 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-06 03:19:44,233 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: ola
2025-09-06 03:19:44,233 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-06 03:19:44,233 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-08 13:37:17,286 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-08 16:47:56,408 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-09 16:29:13,055 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 14:05:35,618 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 14:06:59,787 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-10 14:06:59,788 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-10 14:06:59,790 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 14:07:14,296 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 14:08:02,149 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-10 14:08:27,501 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 14:08:27,502 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:08:27,503 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:08:27,503 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:25:20', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 14:08:27,503 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:08:27.503627, rows=1
2025-09-10 14:08:27,503 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:08:27,503 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:27,505 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:27,506 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 13:00:00 <= 15:08:27.505973
2025-09-10 14:08:27,506 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 14:00:00 <= 15:08:27.506224
2025-09-10 14:08:27,506 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 15:00:00 <= 15:08:27.506507
2025-09-10 14:08:27,508 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,508 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:08:27,509 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:08:27,509 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:08:27,509 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:08:27,509 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:08:27,510 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:08:27,510 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:08:27,510 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:08:27,510 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:08:27,510 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:08:27,511 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:08:27,511 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:08:27,511 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 14:08:27,511 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:27,512 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:27,513 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,515 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,516 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,521 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 14:08:27,522 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:08:27,523 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 14:08:27,523 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:08:27,523 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 14:08:27,523 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:08:27,524 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 14:08:27,524 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:08:27,524 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 14:08:27,525 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:27,525 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:27,526 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,527 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,529 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-10 14:08:27,529 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:08:27,529 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-10 14:08:41,130 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-10 14:08:41,130 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:25:20', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:08:41.131276, rows=1
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 13:00:00 <= 15:08:41.131698
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 14:00:00 <= 15:08:41.131788
2025-09-10 14:08:41,131 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 15:00:00 <= 15:08:41.131872
2025-09-10 14:08:41,132 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-10 16:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,132 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:08:41,132 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 14:08:41,133 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:41,134 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:41,134 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,135 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,136 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,137 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,137 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 14:08:41,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:08:41,139 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:08:41,139 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,140 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,141 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1339] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1340] - DEBUG horarios_disponiveis count: 8
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1347] - DEBUG numero_match: 1, indice=0
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:1350] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:765] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-10', 'hora': '16:00', 'data_formatada': '10/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1757520000.0}
2025-09-10 14:08:41,142 - root - INFO - [ai_service.py:766] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:08:51,378 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-10 14:11:47,951 - SistemaAgendamento - INFO - [app.py:1533] - Tentativa de download - Agendamento ID: 1
2025-09-10 14:11:47,952 - SistemaAgendamento - INFO - [app.py:1551] - Verificando arquivo: uploads/anexos/1_9b4537d5_Captura_de_tela_2025-09-05_160654.png
2025-09-10 14:13:15,655 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: OI BOM DIA
2025-09-10 14:13:15,655 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-10 14:13:15,656 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 14:13:35,330 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 13073430660
2025-09-10 14:13:47,430 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: JESSICA RODRIGUES DUARTE
2025-09-10 14:13:54,683 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 25/031995
2025-09-10 14:14:05,693 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 25/03/1995
2025-09-10 14:14:05,693 - root - INFO - [ai_service.py:400] - Data armazenada nos dados: 1995-03-25
2025-09-10 14:14:15,321 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31992292122
2025-09-10 14:14:41,003 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: JESSIKDUARTE789@GMAIL.COM
2025-09-10 14:15:00,658 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 0-523678
2025-09-10 14:15:09,775 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: MED GOLD
2025-09-10 14:15:17,768 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: BELO HORIZONTE
2025-09-10 14:15:22,029 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Avaliação - Terapias
2025-09-10 14:15:22,031 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '13073430660', 'etapa_cadastro': 'carteirinha', 'nome': 'JESSICA RODRIGUES DUARTE', 'data_nascimento': '1995-03-25', 'telefone': '31992292122', 'email': 'JESSIKDUARTE789@GMAIL.COM', 'carteirinha': '0523678', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-10 14:15:22,031 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:15:22,031 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 2, 'dia_semana': 1, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-10 14:15:22,031 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:15:22.031840, rows=1
2025-09-10 14:15:22,031 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=2
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=3
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=4
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:15:22,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:15:22,033 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=0
2025-09-10 14:15:22,033 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:15:22,033 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=1
2025-09-10 14:15:22,033 - root - INFO - [ai_service.py:1179] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-10 14:15:22,034 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,035 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,036 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,037 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,038 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,039 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,040 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,042 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:22,042 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:15:22,042 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-16', 'hora': '08:00', 'data_formatada': '16/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1758009600.0}
2025-09-10 14:15:39,975 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 8
2025-09-10 14:15:39,976 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=2, dados={'cpf': '13073430660', 'etapa_cadastro': 'carteirinha', 'nome': 'JESSICA RODRIGUES DUARTE', 'data_nascimento': '1995-03-25', 'telefone': '31992292122', 'email': 'JESSIKDUARTE789@GMAIL.COM', 'carteirinha': '0523678', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-10 14:15:39,976 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:15:39,976 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 2, 'nome': 'Joyce Almeida Lemos', 'crm': 'CRM-000001', 'especialidade_id': 2, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:26:51', 'medico_id': 2, 'local_id': 2, 'dia_semana': 1, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 45}
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:15:39.976983, rows=1
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=2
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=3
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=4
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:15:39,977 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:15:39,978 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=0
2025-09-10 14:15:39,978 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:15:39,978 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Joyce Almeida Lemos, dia_semana_medico=1, dia_semana_atual=1
2025-09-10 14:15:39,978 - root - INFO - [ai_service.py:1179] - DEBUG médico Joyce Almeida Lemos trabalha de 08:00:00 às 17:00:00
2025-09-10 14:15:39,980 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 08:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,982 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 09:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,985 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 10:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,986 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 11:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,988 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 13:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,990 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 14:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,991 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 15:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,993 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-16 16:00:00 - Dr. Joyce Almeida Lemos
2025-09-10 14:15:39,993 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:15:39,993 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-16', 'hora': '08:00', 'data_formatada': '16/09/2025', 'hora_formatada': '08:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1758009600.0}
2025-09-10 14:15:39,993 - root - INFO - [ai_service.py:1339] - DEBUG _interpretar_escolha_horario: mensagem='8'
2025-09-10 14:15:39,994 - root - INFO - [ai_service.py:1340] - DEBUG horarios_disponiveis count: 8
2025-09-10 14:15:39,994 - root - INFO - [ai_service.py:1347] - DEBUG numero_match: 8, indice=7
2025-09-10 14:15:39,994 - root - INFO - [ai_service.py:1350] - DEBUG horario escolhido: {'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-16', 'hora': '16:00', 'data_formatada': '16/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1758038400.0}
2025-09-10 14:15:39,994 - root - INFO - [ai_service.py:765] - DEBUG _processar_horarios: mensagem='8', escolha={'medico_id': 2, 'medico_nome': 'Joyce Almeida Lemos', 'medico': 'Joyce Almeida Lemos', 'especialidade': 'Avaliação - Terapias', 'crm': 'CRM-000001', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-16', 'hora': '16:00', 'data_formatada': '16/09/2025', 'hora_formatada': '16:00', 'dia_semana': 'Terça', 'duracao': 45, 'timestamp': 1758038400.0}
2025-09-10 14:15:39,995 - root - INFO - [ai_service.py:766] - DEBUG dados atuais antes da escolha: {'cpf': '13073430660', 'etapa_cadastro': 'carteirinha', 'nome': 'JESSICA RODRIGUES DUARTE', 'data_nascimento': '1995-03-25', 'telefone': '31992292122', 'email': 'JESSIKDUARTE789@GMAIL.COM', 'carteirinha': '0523678', 'tipo_atendimento': 'plano', 'paciente_id': 2, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 2, 'especialidade_nome': 'Avaliação - Terapias'}
2025-09-10 14:18:00,467 - SistemaAgendamento - INFO - [app.py:342] - Arquivo anexado via chat - Agendamento: 6, Arquivo: CONTRATO_BEATRIZ_REZENDE_REFEITO_1.docx
2025-09-10 14:18:11,309 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: SIM
2025-09-10 14:37:07,424 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: Oi
2025-09-10 14:37:07,424 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-10 14:37:07,424 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 14:37:21,032 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 92498612653
2025-09-10 14:37:47,292 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Sérgio Duarte Alves
2025-09-10 14:38:05,565 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 02/09/1972
2025-09-10 14:38:05,565 - root - INFO - [ai_service.py:400] - Data armazenada nos dados: 1972-09-02
2025-09-10 14:38:15,518 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31986547124
2025-09-10 14:38:29,416 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: duartealves1272@gmail.com
2025-09-10 14:38:45,229 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: Particular
2025-09-10 14:38:50,643 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-10 14:38:57,935 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 14:38:57,936 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '92498612653', 'etapa_cadastro': 'carteirinha', 'nome': 'Sérgio Duarte Alves', 'data_nascimento': '1972-09-02', 'telefone': '31986547124', 'email': 'duartealves1272@gmail.com', 'carteirinha': None, 'tipo_atendimento': 'particular', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:25:20', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:38:57.937396, rows=1
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 13:00:00 <= 15:38:57.937863
2025-09-10 14:38:57,937 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 14:00:00 <= 15:38:57.937974
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 15:00:00 <= 15:38:57.938071
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1227] - DEBUG horário ocupado: 2025-09-10 16:00:00
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:38:57,938 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:38:57,939 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:38:57,940 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,941 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,942 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,942 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:38:57,943 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 14:38:57,944 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:38:57,944 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 14:38:57,944 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:38:57,944 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:38:57,945 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,945 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,946 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,947 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-10 14:38:57,947 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:38:57,947 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '13:00', 'data_formatada': '17/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1758114000.0}
2025-09-10 14:39:13,982 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 6
2025-09-10 14:39:13,983 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=2, especialidade_id=1, dados={'cpf': '92498612653', 'etapa_cadastro': 'carteirinha', 'nome': 'Sérgio Duarte Alves', 'data_nascimento': '1972-09-02', 'telefone': '31986547124', 'email': 'duartealves1272@gmail.com', 'carteirinha': None, 'tipo_atendimento': 'particular', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:39:13,983 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 14:39:13,984 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': '12345-SP', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-05 16:25:20', 'medico_id': 1, 'local_id': 2, 'dia_semana': 2, 'hora_inicio': '13:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 14:39:13,984 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=14:39:13.984210, rows=1
2025-09-10 14:39:13,984 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 14:39:13,984 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:39:13,984 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:39:13,985 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 13:00:00 <= 15:39:13.985023
2025-09-10 14:39:13,985 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 14:00:00 <= 15:39:13.985195
2025-09-10 14:39:13,985 - root - INFO - [ai_service.py:1196] - DEBUG pulando horário passado: 15:00:00 <= 15:39:13.985373
2025-09-10 14:39:13,985 - root - INFO - [ai_service.py:1227] - DEBUG horário ocupado: 2025-09-10 16:00:00
2025-09-10 14:39:13,986 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 14:39:13,986 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:39:13,986 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 14:39:13,986 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:39:13,986 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:39:13,987 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 14:39:13,988 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:39:13,988 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 14:39:13,988 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:39:13,988 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:39:13,990 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 13:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,991 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 14:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,992 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 15:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-17 16:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=3
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=4
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 14:39:13,993 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=0
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=1
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=2, dia_semana_atual=2
2025-09-10 14:39:13,994 - root - INFO - [ai_service.py:1179] - DEBUG médico Rafael Elian trabalha de 13:00:00 às 17:00:00
2025-09-10 14:39:13,995 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 13:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,996 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 14:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,997 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 15:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,998 - root - INFO - [ai_service.py:1225] - DEBUG adicionado horário: 2025-09-24 16:00:00 - Dr. Rafael Elian
2025-09-10 14:39:13,998 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 8
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-17', 'hora': '13:00', 'data_formatada': '17/09/2025', 'hora_formatada': '13:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1758114000.0}
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:1339] - DEBUG _interpretar_escolha_horario: mensagem='6'
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:1340] - DEBUG horarios_disponiveis count: 8
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:1347] - DEBUG numero_match: 6, indice=5
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:1350] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '14:00', 'data_formatada': '24/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1758722400.0}
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:765] - DEBUG _processar_horarios: mensagem='6', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': '12345-SP', 'local_id': 2, 'local_nome': 'Belo Horizonte', 'data': '2025-09-24', 'hora': '14:00', 'data_formatada': '24/09/2025', 'hora_formatada': '14:00', 'dia_semana': 'Quarta', 'duracao': 15, 'timestamp': 1758722400.0}
2025-09-10 14:39:13,999 - root - INFO - [ai_service.py:766] - DEBUG dados atuais antes da escolha: {'cpf': '92498612653', 'etapa_cadastro': 'carteirinha', 'nome': 'Sérgio Duarte Alves', 'data_nascimento': '1972-09-02', 'telefone': '31986547124', 'email': 'duartealves1272@gmail.com', 'carteirinha': None, 'tipo_atendimento': 'particular', 'paciente_id': 3, 'local_id': 2, 'local_nome': 'Belo Horizonte', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 14:39:30,117 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: Sim
2025-09-10 14:43:12,158 - SistemaAgendamento - INFO - [app.py:1533] - Tentativa de download - Agendamento ID: 2
2025-09-10 14:43:12,158 - SistemaAgendamento - INFO - [app.py:1551] - Verificando arquivo: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-10 14:43:12,159 - SistemaAgendamento - ERROR - [app.py:1554] - Arquivo não existe: uploads/anexos/anexos/Captura_de_tela_2025-09-05_160654.png
2025-09-10 14:43:18,771 - SistemaAgendamento - INFO - [app.py:1533] - Tentativa de download - Agendamento ID: 7
2025-09-10 14:43:18,772 - SistemaAgendamento - INFO - [app.py:1551] - Verificando arquivo: uploads/anexos/anexos/CONTRATO_BEATRIZ_REZENDE_REFEITO_1.docx
2025-09-10 14:43:18,772 - SistemaAgendamento - ERROR - [app.py:1554] - Arquivo não existe: uploads/anexos/anexos/CONTRATO_BEATRIZ_REZENDE_REFEITO_1.docx
2025-09-10 14:43:21,665 - SistemaAgendamento - INFO - [app.py:1533] - Tentativa de download - Agendamento ID: 6
2025-09-10 14:43:21,666 - SistemaAgendamento - INFO - [app.py:1551] - Verificando arquivo: uploads/anexos/6_c3eab365_CONTRATO_BEATRIZ_REZENDE_REFEITO_1.docx
2025-09-10 20:32:59,509 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 20:33:51,874 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-10 20:33:51,874 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-10 20:33:51,874 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 20:35:39,869 - root - INFO - [app.py:1378] - Banco de dados zerado pelo admin. 2 locais mantidos.
2025-09-10 21:05:46,769 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:08:21,915 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:08:29,726 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:08:40,659 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:09:44,829 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:10:28,852 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:10:53,458 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:15:57,139 - root - INFO - [ai_service.py:61] - Estado atual: inicio, Mensagem: ola
2025-09-10 21:15:57,140 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'inicio' para 'inicio'
2025-09-10 21:15:57,140 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:16:03,611 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:16:16,410 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: joao layon antunes dos anjos
2025-09-10 21:16:24,061 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-10 21:16:24,066 - root - INFO - [ai_service.py:400] - Data armazenada nos dados: 2001-01-22
2025-09-10 21:16:31,697 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31975317444
2025-09-10 21:16:40,781 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: joaolayon072@gmail.com
2025-09-10 21:16:40,781 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-10 21:16:40,782 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:16:50,363 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:17:12,205 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 11175343676
2025-09-10 21:19:39,236 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 11175343676
2025-09-10 21:19:53,608 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: ola
2025-09-10 21:19:53,608 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'cadastro' para 'inicio'
2025-09-10 21:19:53,609 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:19:59,315 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:20:14,711 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: João Layon antunes dos anjos
2025-09-10 21:20:19,436 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 22/01/2001
2025-09-10 21:20:19,439 - root - INFO - [ai_service.py:400] - Data armazenada nos dados: 2001-01-22
2025-09-10 21:20:27,647 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: 31975317444
2025-09-10 21:20:30,531 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: pular
2025-09-10 21:20:35,935 - root - INFO - [ai_service.py:61] - Estado atual: cadastro, Mensagem: particular
2025-09-10 21:20:46,383 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Belo Horizonte
2025-09-10 21:20:50,390 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Contagem
2025-09-10 21:20:53,216 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: Oi
2025-09-10 21:20:53,216 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'especialidade' para 'inicio'
2025-09-10 21:20:53,216 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:20:55,541 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: ola
2025-09-10 21:20:55,542 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'aguardando_cpf' para 'inicio'
2025-09-10 21:20:55,542 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:21:02,321 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:21:04,043 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:21:05,792 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:21:05,793 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:21:05,793 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:21:05.794155, rows=1
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:21:05,794 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:21:05,798 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:21:05,798 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:21:05,798 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:21:05,798 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:21:05,799 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:21:05,800 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:21:05,801 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:21:05,802 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:21:05,803 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:21:05,803 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:21:05,803 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:21:05,803 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:21:05,803 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:21:05,804 - root - INFO - [ai_service.py:1185] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00
2025-09-10 21:21:05,805 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 08:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,806 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,807 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 10:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,808 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 11:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,809 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 13:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,811 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 14:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,812 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 15:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,813 - root - INFO - [ai_service.py:1231] - DEBUG adicionado horário: 2025-10-02 16:00:00 - Dr. Rafael Elian
2025-09-10 21:21:05,814 - root - INFO - [ai_service.py:1254] - DEBUG total de horários gerados: 8
2025-09-10 21:21:05,814 - root - INFO - [ai_service.py:1255] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 21:25:52,852 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:26:13,721 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:26:41,651 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:28:01,780 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:31:12,536 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: ola
2025-09-10 21:31:12,537 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-10 21:31:12,537 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:31:17,646 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:31:20,663 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:31:22,593 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:31:22,595 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:31:22,595 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:31:22,595 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:31:22,595 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:31:22.595813, rows=1
2025-09-10 21:31:22,595 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:31:22,596 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:31:22,596 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:31:22,596 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1178] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1163] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:31:22,598 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1163] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:31:22,599 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:31:22,600 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:31:22,600 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:31:22,600 - root - INFO - [ai_service.py:1178] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:31:22,600 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1163] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1163] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:31:22,601 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:31:22,602 - root - INFO - [ai_service.py:1159] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:31:22,602 - root - INFO - [ai_service.py:1168] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:31:22,602 - root - INFO - [ai_service.py:1248] - DEBUG total de horários gerados: 0
2025-09-10 21:31:22,602 - root - INFO - [ai_service.py:1249] - DEBUG primeiro horário: nenhum
2025-09-10 21:32:47,081 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:32:57,912 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:33:06,634 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:33:19,996 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:34:23,244 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:34:32,977 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:35:50,684 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:37:50,122 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-10 21:37:50,123 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-10 21:37:50,123 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:38:06,302 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:38:13,487 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:38:15,794 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:38:15,795 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:38:15,796 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:38:15,796 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:38:15,797 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:38:15.796985, rows=1
2025-09-10 21:38:15,797 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:38:15,797 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=2
2025-09-10 21:38:15,797 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:38:15,797 - root - INFO - [ai_service.py:1174] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1181] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=4
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=5
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=6
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=0
2025-09-10 21:38:15,802 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=1
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=2
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1174] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1181] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:38:15,803 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=4
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=5
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=6
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=0
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=1
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=2
2025-09-10 21:38:15,804 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1174] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1181] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=4
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=5
2025-09-10 21:38:15,805 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=6
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=0
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=1
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1168] - DEBUG nenhum médico disponível para dia_semana=2
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1163] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:38:15,806 - root - INFO - [ai_service.py:1174] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:38:15,807 - root - ERROR - [ai_service.py:1260] - Erro em _gerar_horarios_disponiveis: 'sqlite3.Row' object has no attribute 'get'
2025-09-10 21:38:15,808 - root - ERROR - [ai_service.py:1262] - Traceback: Traceback (most recent call last):
  File "/home/runner/workspace/ai_service.py", line 1186, in _gerar_horarios_disponiveis
    duracao_consulta = int(row.get('duracao_consulta', 30))  # Default 30 minutos
                           ^^^^^^^
AttributeError: 'sqlite3.Row' object has no attribute 'get'

2025-09-10 21:40:04,882 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:40:31,733 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-10 21:40:31,733 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-10 21:40:31,734 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:40:40,017 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:40:41,652 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:40:43,023 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:40:43.024628, rows=1
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:40:43,024 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:43,026 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:40:43,026 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:40:43,027 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:43,028 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:40:43,028 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:43,028 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:40:43,028 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:43,029 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:40:43,029 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:40:43,029 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:43,029 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:40:43,029 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:40:43,030 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:43,032 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:40:43,032 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:40:43,032 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:43,033 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:40:43,034 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:43,034 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:40:43,035 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:43,036 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:40:43,036 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:43,036 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:40:43,037 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:43,037 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:40:43,037 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:43,037 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:40:43,037 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:43,040 - root - INFO - [ai_service.py:1186] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00
2025-09-10 21:40:43,042 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 08:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,044 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,046 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 10:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,047 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 11:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,048 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 13:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,050 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 14:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,051 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 15:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,052 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 16:00:00 - Dr. Rafael Elian
2025-09-10 21:40:43,052 - root - INFO - [ai_service.py:1255] - DEBUG total de horários gerados: 8
2025-09-10 21:40:43,053 - root - INFO - [ai_service.py:1256] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 21:40:59,840 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 1
2025-09-10 21:40:59,841 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:40:59,841 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:40:59,841 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:40:59,842 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:40:59.842028, rows=1
2025-09-10 21:40:59,842 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:40:59,842 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:59,842 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:40:59,842 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:40:59,843 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:40:59,844 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:59,848 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:40:59,848 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:40:59,848 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:59,848 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:59,849 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:40:59,850 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:59,850 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:40:59,850 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:59,850 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:40:59,850 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:59,851 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:40:59,851 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:40:59,851 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:40:59,852 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:40:59,853 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:40:59,854 - root - INFO - [ai_service.py:1186] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00
2025-09-10 21:40:59,856 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 08:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,857 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,858 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 10:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,859 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 11:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,860 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 13:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,862 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 14:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,863 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 15:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,864 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 16:00:00 - Dr. Rafael Elian
2025-09-10 21:40:59,864 - root - INFO - [ai_service.py:1255] - DEBUG total de horários gerados: 8
2025-09-10 21:40:59,864 - root - INFO - [ai_service.py:1256] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 21:40:59,864 - root - INFO - [ai_service.py:1346] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-10 21:40:59,864 - root - INFO - [ai_service.py:1347] - DEBUG horarios_disponiveis count: 8
2025-09-10 21:40:59,865 - root - INFO - [ai_service.py:1354] - DEBUG numero_match: 1, indice=0
2025-09-10 21:40:59,865 - root - INFO - [ai_service.py:1357] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 21:40:59,865 - root - INFO - [ai_service.py:765] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 21:40:59,865 - root - INFO - [ai_service.py:766] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:41:05,188 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-10 21:41:10,357 - root - INFO - [ai_service.py:61] - Estado atual: finalizado, Mensagem: Oi
2025-09-10 21:41:10,357 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-10 21:41:10,358 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:41:18,669 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:41:24,383 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:41:32,844 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:41:32,845 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:41:32,845 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:41:32.846140, rows=1
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:41:32,846 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:41:32,847 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:41:32,848 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:41:32,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:41:32,853 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:41:32,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:41:32,853 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:41:32,853 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:41:32,854 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:41:32,855 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:41:32,855 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:41:32,855 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:41:32,856 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:41:32,857 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:41:32,857 - root - INFO - [ai_service.py:1186] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00
2025-09-10 21:41:32,858 - root - INFO - [ai_service.py:1234] - DEBUG horário ocupado: 2025-10-02 08:00:00
2025-09-10 21:41:32,859 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,860 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 10:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,861 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 11:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,862 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 13:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,863 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 14:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,864 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 15:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-02 16:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 23: data=2025-10-03, dia_semana=4
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 24: data=2025-10-04, dia_semana=5
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:41:32,865 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 25: data=2025-10-05, dia_semana=6
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 26: data=2025-10-06, dia_semana=0
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 27: data=2025-10-07, dia_semana=1
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 28: data=2025-10-08, dia_semana=2
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 29: data=2025-10-09, dia_semana=3
2025-09-10 21:41:32,866 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:41:32,867 - root - INFO - [ai_service.py:1186] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00
2025-09-10 21:41:32,868 - root - INFO - [ai_service.py:1232] - DEBUG adicionado horário: 2025-10-09 08:00:00 - Dr. Rafael Elian
2025-09-10 21:41:32,868 - root - INFO - [ai_service.py:1255] - DEBUG total de horários gerados: 8
2025-09-10 21:41:32,868 - root - INFO - [ai_service.py:1256] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '09:00', 'data_formatada': '02/10/2025', 'hora_formatada': '09:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759395600.0}
2025-09-10 21:44:33,121 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:44:57,325 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:45:10,387 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:45:26,050 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:46:23,257 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:47:05,541 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 21:47:33,688 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: Oi
2025-09-10 21:47:33,689 - root - INFO - [ai_service.py:75] - Saudação detectada, resetando conversa do estado 'horarios' para 'inicio'
2025-09-10 21:47:33,690 - root - WARNING - [ai_service.py:275] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 21:47:40,746 - root - INFO - [ai_service.py:61] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 21:47:43,882 - root - INFO - [ai_service.py:61] - Estado atual: local, Mensagem: Contagem
2025-09-10 21:47:45,182 - root - INFO - [ai_service.py:61] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 21:47:45,184 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:47:45,185 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:47:45,185 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:47:45,185 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:47:45.185675, rows=1
2025-09-10 21:47:45,185 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:47:45,185 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:47:45,186 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:47:45,186 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:47:45,194 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:47:45,194 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:47:45,194 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:47:45,195 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:47:45,195 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:47:45,195 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:47:45,195 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:47:45,196 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:47:45,196 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:47:45,196 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:47:45,196 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:47:45,197 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:47:45,197 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:47:45,197 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:47:45,198 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:47:45,199 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:47:45,200 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:47:45,201 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:47:45,202 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:47:45,202 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:47:45,202 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:47:45,202 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:47:45,202 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:47:45,210 - root - INFO - [ai_service.py:1196] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00, duração: 15min
2025-09-10 21:47:45,210 - root - INFO - [ai_service.py:1245] - DEBUG horário ocupado: 2025-10-02 08:00:00
2025-09-10 21:47:45,211 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:47:45,213 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:30:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:47:45,214 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:45:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:47:45,215 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:47:45,216 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 09:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:47:45,216 - root - INFO - [ai_service.py:1269] - DEBUG total de horários gerados: 5
2025-09-10 21:47:45,216 - root - INFO - [ai_service.py:1270] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:15', 'data_formatada': '02/10/2025', 'hora_formatada': '08:15', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392900.0}
2025-09-10 21:48:05,123 - root - INFO - [ai_service.py:61] - Estado atual: horarios, Mensagem: 2
2025-09-10 21:48:05,124 - root - INFO - [ai_service.py:698] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:48:05,125 - root - INFO - [ai_service.py:715] - DEBUG query result: encontrou 1 registros
2025-09-10 21:48:05,126 - root - INFO - [ai_service.py:717] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 21:48:05,127 - root - INFO - [ai_service.py:1151] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=21:48:05.127611, rows=1
2025-09-10 21:48:05,128 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 21:48:05,128 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:48:05,128 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 21:48:05,128 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:48:05,129 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 21:48:05,129 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 21:48:05,129 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:48:05,129 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 21:48:05,130 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:48:05,130 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 21:48:05,130 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:48:05,130 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 21:48:05,130 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:48:05,131 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 21:48:05,131 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:48:05,131 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 21:48:05,132 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:48:05,132 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 21:48:05,133 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:48:05,134 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 21:48:05,134 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:48:05,135 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 21:48:05,136 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:48:05,136 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 21:48:05,136 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:48:05,136 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 21:48:05,136 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:48:05,137 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 21:48:05,138 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:48:05,138 - root - INFO - [ai_service.py:1180] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 21:48:05,139 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 21:48:05,139 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 21:48:05,139 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 21:48:05,139 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 21:48:05,140 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 21:48:05,140 - root - INFO - [ai_service.py:1165] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 21:48:05,141 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 21:48:05,141 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 21:48:05,141 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 21:48:05,141 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 21:48:05,142 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 21:48:05,142 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 21:48:05,143 - root - INFO - [ai_service.py:1161] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 21:48:05,143 - root - INFO - [ai_service.py:1170] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 21:48:05,143 - root - INFO - [ai_service.py:1196] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00, duração: 15min
2025-09-10 21:48:05,144 - root - INFO - [ai_service.py:1245] - DEBUG horário ocupado: 2025-10-02 08:00:00
2025-09-10 21:48:05,146 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:48:05,149 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:30:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:48:05,152 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 08:45:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:48:05,153 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:48:05,155 - root - INFO - [ai_service.py:1243] - DEBUG adicionado horário: 2025-10-02 09:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 21:48:05,157 - root - INFO - [ai_service.py:1269] - DEBUG total de horários gerados: 5
2025-09-10 21:48:05,158 - root - INFO - [ai_service.py:1270] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:15', 'data_formatada': '02/10/2025', 'hora_formatada': '08:15', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392900.0}
2025-09-10 21:48:05,159 - root - INFO - [ai_service.py:1360] - DEBUG _interpretar_escolha_horario: mensagem='2'
2025-09-10 21:48:05,161 - root - INFO - [ai_service.py:1361] - DEBUG horarios_disponiveis count: 5
2025-09-10 21:48:05,162 - root - INFO - [ai_service.py:1368] - DEBUG numero_match: 2, indice=1
2025-09-10 21:48:05,162 - root - INFO - [ai_service.py:1371] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:30', 'data_formatada': '02/10/2025', 'hora_formatada': '08:30', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759393800.0}
2025-09-10 21:48:05,163 - root - INFO - [ai_service.py:765] - DEBUG _processar_horarios: mensagem='2', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:30', 'data_formatada': '02/10/2025', 'hora_formatada': '08:30', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759393800.0}
2025-09-10 21:48:05,163 - root - INFO - [ai_service.py:766] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 21:49:07,455 - root - INFO - [ai_service.py:61] - Estado atual: confirmacao, Mensagem: sim
2025-09-10 22:09:14,379 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:16,989 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:19,578 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:23,173 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:26,785 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:31,378 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:32,943 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:35,507 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:41,155 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:42,742 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:45,372 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:46,967 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:55,665 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:09:57,359 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:05,193 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:07,851 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:09,554 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:17,093 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:23,683 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:10:31,825 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:12:02,068 - root - INFO - [ai_service.py:64] - Estado atual: finalizado, Mensagem: OLA
2025-09-10 22:12:02,068 - root - INFO - [ai_service.py:78] - Saudação detectada, resetando conversa do estado 'finalizado' para 'inicio'
2025-09-10 22:12:02,068 - root - WARNING - [ai_service.py:280] - IA temporariamente indisponível: GEMINI_API_KEY é obrigatória para o funcionamento do sistema de agendamento inteligente. Configure a chave da API do Google Gemini.. Usando fallback inteligente.
2025-09-10 22:12:07,223 - root - INFO - [ai_service.py:64] - Estado atual: aguardando_cpf, Mensagem: 11175343676
2025-09-10 22:12:08,579 - root - INFO - [ai_service.py:64] - Estado atual: local, Mensagem: Contagem
2025-09-10 22:12:09,696 - root - INFO - [ai_service.py:64] - Estado atual: especialidade, Mensagem: NeuroPediatra
2025-09-10 22:12:09,697 - root - INFO - [ai_service.py:704] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 22:12:09,698 - root - INFO - [ai_service.py:723] - DEBUG query result: encontrou 1 registros
2025-09-10 22:12:09,698 - root - INFO - [ai_service.py:727] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 22:12:09,698 - root - INFO - [ai_service.py:1214] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=22:12:09.698783, rows=1
2025-09-10 22:12:09,698 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 22:12:09,698 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:09,699 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 22:12:09,699 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:09,709 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 22:12:09,709 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 22:12:09,709 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:09,709 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 22:12:09,709 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 22:12:09,710 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 22:12:09,711 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:09,712 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 22:12:09,713 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:09,714 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 22:12:09,714 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:09,714 - root - INFO - [ai_service.py:1276] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00, duração: 15min
2025-09-10 22:12:09,716 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:09,717 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:09,717 - root - INFO - [ai_service.py:1352] - DEBUG horário ocupado: 2025-10-02 08:30:00
2025-09-10 22:12:09,719 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:45:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:09,720 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:09,721 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 09:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:09,722 - root - INFO - [ai_service.py:1378] - DEBUG total de horários gerados: 5
2025-09-10 22:12:09,722 - root - INFO - [ai_service.py:1380] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 22:12:12,695 - root - INFO - [ai_service.py:64] - Estado atual: horarios, Mensagem: 1
2025-09-10 22:12:12,695 - root - INFO - [ai_service.py:704] - DEBUG _processar_horarios: local_id=1, especialidade_id=1, dados={'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 22:12:12,695 - root - INFO - [ai_service.py:723] - DEBUG query result: encontrou 1 registros
2025-09-10 22:12:12,695 - root - INFO - [ai_service.py:727] - DEBUG primeiro registro: {'id': 1, 'nome': 'Rafael Elian', 'crm': 'CRM-0001', 'especialidade_id': 1, 'ativo': 1, 'agenda_recorrente': 0, 'criado_em': '2025-09-10 20:38:23', 'data_abertura_agenda': '2025-10-01', 'medico_id': 1, 'local_id': 1, 'dia_semana': 3, 'hora_inicio': '08:00', 'hora_fim': '17:00', 'duracao_consulta': 15}
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1214] - DEBUG _gerar_horarios_disponiveis: hoje=2025-09-10, hora_atual=22:12:12.696015, rows=1
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 0: data=2025-09-10, dia_semana=2
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 1: data=2025-09-11, dia_semana=3
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-11
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 2: data=2025-09-12, dia_semana=4
2025-09-10 22:12:12,696 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 3: data=2025-09-13, dia_semana=5
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 4: data=2025-09-14, dia_semana=6
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 5: data=2025-09-15, dia_semana=0
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 6: data=2025-09-16, dia_semana=1
2025-09-10 22:12:12,697 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:12,698 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 7: data=2025-09-17, dia_semana=2
2025-09-10 22:12:12,698 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:12,699 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 8: data=2025-09-18, dia_semana=3
2025-09-10 22:12:12,699 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:12,699 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-18
2025-09-10 22:12:12,699 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 9: data=2025-09-19, dia_semana=4
2025-09-10 22:12:12,699 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 10: data=2025-09-20, dia_semana=5
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 11: data=2025-09-21, dia_semana=6
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 12: data=2025-09-22, dia_semana=0
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 13: data=2025-09-23, dia_semana=1
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 14: data=2025-09-24, dia_semana=2
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 15: data=2025-09-25, dia_semana=3
2025-09-10 22:12:12,700 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1255] - DEBUG agenda fechada para médico Rafael Elian na data 2025-09-25
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 16: data=2025-09-26, dia_semana=4
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=4
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 17: data=2025-09-27, dia_semana=5
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=5
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 18: data=2025-09-28, dia_semana=6
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1235] - DEBUG pulando fim de semana: dia_semana=6
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 19: data=2025-09-29, dia_semana=0
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=0
2025-09-10 22:12:12,701 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 20: data=2025-09-30, dia_semana=1
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=1
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 21: data=2025-10-01, dia_semana=2
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=2
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1229] - DEBUG processando dia 22: data=2025-10-02, dia_semana=3
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1242] - DEBUG verificando médico: nome=Rafael Elian, dia_semana_medico=3, dia_semana_atual=3
2025-09-10 22:12:12,702 - root - INFO - [ai_service.py:1276] - DEBUG médico Rafael Elian trabalha de 08:00:00 às 17:00:00, duração: 15min
2025-09-10 22:12:12,703 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:12,704 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:12,705 - root - INFO - [ai_service.py:1352] - DEBUG horário ocupado: 2025-10-02 08:30:00
2025-09-10 22:12:12,706 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 08:45:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:12,707 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 09:00:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1348] - DEBUG adicionado horário: 2025-10-02 09:15:00 - Dr. Rafael Elian (duração: 15min)
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1378] - DEBUG total de horários gerados: 5
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1380] - DEBUG primeiro horário: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1474] - DEBUG _interpretar_escolha_horario: mensagem='1'
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1476] - DEBUG horarios_disponiveis count: 5
2025-09-10 22:12:12,708 - root - INFO - [ai_service.py:1485] - DEBUG numero_match: 1, indice=0
2025-09-10 22:12:12,709 - root - INFO - [ai_service.py:1490] - DEBUG horario escolhido: {'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 22:12:12,709 - root - INFO - [ai_service.py:783] - DEBUG _processar_horarios: mensagem='1', escolha={'medico_id': 1, 'medico_nome': 'Rafael Elian', 'medico': 'Rafael Elian', 'especialidade': 'NeuroPediatra', 'crm': 'CRM-0001', 'local_id': 1, 'local_nome': 'Contagem', 'data': '2025-10-02', 'hora': '08:00', 'data_formatada': '02/10/2025', 'hora_formatada': '08:00', 'dia_semana': 'Quinta', 'duracao': 15, 'timestamp': 1759392000.0}
2025-09-10 22:12:12,709 - root - INFO - [ai_service.py:786] - DEBUG dados atuais antes da escolha: {'cpf': '11175343676', 'paciente_id': 1, 'acao_desejada': 'agendar', 'local_id': 1, 'local_nome': 'Contagem', 'especialidade_id': 1, 'especialidade_nome': 'NeuroPediatra'}
2025-09-10 22:12:19,143 - root - INFO - [ai_service.py:64] - Estado atual: confirmacao, Mensagem: sim
2025-09-10 22:20:15,234 - SistemaAgendamento - INFO - [app.py:898] - Sistema João Layon Ativo: SQLite3 Version
2025-09-10 22:30:16,300 - root - INFO - [app.py:1382] - Banco de dados zerado pelo admin. 2 locais mantidos.
